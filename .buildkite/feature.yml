# This is the feature branch pipeline. It does not update any infrastructure, but instead
# performs sanity checks of the templates to verify that they meet minimum standards.

env:
  # Ensure all jobs use these values from the agent environment
  WEBCMS_ENVIRONMENT: ${WEBCMS_ENVIRONMENT}
  WEBCMS_SITE: ${WEBCMS_SITE}
  WEBCMS_IMAGE_TAG: ${WEBCMS_IMAGE_TAG}
  WEBCMS_REPO_URL: ${WEBCMS_REPO_URL}

steps:
  - group: ":docker: Build images"
    steps:
      - label: "Build {{matrix}}"
        concurrency_group: $BUILDKITE_PIPELINE_SLUG/build-$BUILDKITE_BRANCH
        concurrency: 4

        matrix:
          - drupal
          - nginx
          - drush

        plugins:
          # Assume cross-account build role. We don't log in directly to ECR as Kaniko is able
          # to do that for us.
          - cultureamp/aws-assume-role#v0.1.0:
              role: arn:aws:iam::316981092358:role/BuildkiteRoleForImageBuilds

          - docker#v3.12.0:
              # Use the debug tag of the Kaniko executor: this gives us access
              # to /bin/sh (which we need to generate Kaniko's config.json).
              image: gcr.io/kaniko-project/executor:debug
              workdir: /workspace

              entrypoint: /bin/sh
              command:
                - -ec
                - |
                    echo '{"credsStore":"ecr-login"}' >/kaniko/.docker/config.json
                    /kaniko/executor \
                      --context=/workspace/services/drupal \
                      --cache \
                      --cache-copy-layers \
                      --cache-repo="${WEBCMS_REPO_URL}/webcms-${WEBCMS_ENVIRONMENT}-cache" \
                      --skip-unused-stages \
                      --snapshotMode=redo \
                      --use-new-run \
                      --target="{{matrix}}" \
                      --destination="${WEBCMS_REPO_URL}/webcms-${WEBCMS_ENVIRONMENT}-${WEBCMS_SITE}-{{target}}:${WEBCMS_IMAGE_TAG}"

      - label: "Build fpm-metrics"
        concurrency_group: $BUILDKITE_PIPELINE_SLUG/build-$BUILDKITE_BRANCH
        concurrency: 4

        plugins:
          - cultureamp/aws-assume-role#v0.1.0:
              role: arn:aws:iam::316981092358:role/BuildkiteRoleForImageBuilds

          - docker#v3.12.0:
              image: gcr.io/kaniko-project/executor:debug
              workdir: /workspace

              entrypoint: /bin/sh
              command:
                - -ec
                - |
                    echo '{"credsStore":"ecr-login"}' >/kaniko/.docker/config.json
                    /kaniko/executor \
                      --context=/workspace/services/fpm-metrics \
                      --destination="${WEBCMS_REPO_URL}/webcms-${WEBCMS_ENVIRONMENT}-${WEBCMS_SITE}-fpm-metrics:${WEBCMS_IMAGE_TAG}"

  # Perform a Terraform formatting check. See the terraform-fmt.sh script for more details
  # on what is executed in this step.
  - label: ":terraform: Formatting"
    plugins:
      - docker#v3.12.0:
          image: hashicorp/terraform:0.14.9
          entrypoint: /bin/sh
          command: [.buildkite/terraform-fmt.sh]

  # For feature branches, we plan three modules: network, infrastructure, and webcms. This
  # way, all branches can be evaluated for their potential impact on existing
  # infrastructure. These plans can all be executed in parallel, meaning that they should
  # have only a minimal impact on build time.

  - label: ":pipeline: :terraform: network"
    command: buildkite-agent pipeline upload .buildkite/terraform.plan.yml
    env:
      WEBCMS_SSM_NAMESPACE: /terraform/${WEBCMS_ENVIRONMENT}/network
      WEBCMS_TF_MODULE: network

  - label: ":pipeline: :terraform: infrastructure"
    command: buildkite-agent pipeline upload .buildkite/terraform.plan.yml
    env:
      WEBCMS_SSM_NAMESPACE: /terraform/${WEBCMS_ENVIRONMENT}/infrastructure
      WEBCMS_TF_MODULE: infrastructure

  # We arbitrarily choose English for a Terraform plan. The two sites' configurations
  # should not be so different that this will miss subtleties with Spanish-language
  # deployments.
  - label: ":pipeline: :terraform: webcms"
    command: buildkite-agent pipeline upload .buildkite/terraform.plan.yml
    env:
      WEBCMS_SSM_NAMESPACE: /terraform/${WEBCMS_ENVIRONMENT}/${WEBCMS_SITE}/en
      WEBCMS_TF_MODULE: webcms
      WEBCMS_LANG: en
