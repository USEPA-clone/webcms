#!/bin/bash

# This script loads AWS Parameter Store values and either saves them to the file system or
# exports them as environment variables.
#
# The plugin's configuration schema is as follows:
#
# plugins:
# - ./.buildkite/plugins/aws-parameters:
#     params:
#     - key: /parameter/store/path
#       file: /path/to/file
#
# Both 'key' and 'file' are required.

# A small bash syntax note: ${!foo} is dereference syntax; if foo=BAR, then ${!foo} is the
# same as ${BAR}, which is how we can create keys and read their values dynamically.

set -euo pipefail

echo "~~~ :aws: Loading parameters"

i=0
while true; do
  prefix="BUILDKITE_PLUGIN_AWS_PARAMETERS_PARAMS_${i}"

  key_name="${prefix}_KEY"
  file_name="${prefix}_FILE"

  # If there is no key variable at this location, we assume we've reached the end of the
  # parameter list.
  if test -z "${!key_name:-}"; then
    break
  fi

  # On the other hand, if the file is missing, this is a hard configuration error and we
  # cannot proceed.
  if test -z "${!file_name:-}"; then
    echo "A file name is required to save the parameter '${!key_name}'" >&2
    echo "^^^ +++"
    exit 1
  fi

  key="${!key_name}"
  file="${!file_name}"

  echo "Loading $key into $file"

  aws --out text \
    ssm get-parameter \
      --name "$key" \
      --query 'Parameter.Value' \
    >"$file"

  i=$((i + 1))
done
