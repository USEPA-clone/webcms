#
# Copy and rename this file to .env at root of this project.
#

# A common use case is to supply database creds via the environment. Edit settings.php
# like so:
#
# $databases['default']['default'] = [
#   'database' => getenv('MYSQL_DATABASE'),
#   'driver' => 'mysql',
#   'host' => getenv('MYSQL_HOSTNAME'),
#   'namespace' => 'Drupal\\Core\\Database\\Driver\\mysql',
#   'password' => getenv('MYSQL_PASSWORD'),
#   'port' => getenv('MYSQL_PORT'),
#   'prefix' => '',
#   'username' => getenv('MYSQL_USER'),
# ];
#
# Uncomment and populate as needed.
# MYSQL_DATABASE=
# MYSQL_HOSTNAME=
# MYSQL_PASSWORD=
# MYSQL_PORT=
# MYSQL_USER=

# Another common use case is to set Drush's --uri via environment.
# DRUSH_OPTIONS_URI=http://example.com

# Set ENV_NAME to a value like "local", "dev", "stage", or "prod".  This triggers the automatic inclusion of
# settings.{ENV_NAME}.env.php
ENV_NAME=local

# Set ENV_STATE to "build" before a site is installed in this environment to ensure we rely on the default database
# implementations.  Afterwards set it to "run". Most commonly and notably, this is used to avoid trying to use a caching
# backend like Redis before the supporting module has been installed and enabled.
ENV_STATE=build
