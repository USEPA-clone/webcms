<?php

/**
 * @file
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_FORM_ID_form_alter.
 *
 * @param $form
 * @param FormStateInterface $form_state
 * @param $form_id
 */
function epa_clone_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  /** @var \Drupal\Core\Entity\EntityFormInterface $object */
  $object = $form_state->getFormObject();
  $node = $object->getEntity();
  if ($node->bundle() == 'faq') {
    $form['field_question']['widget']['#element_validate'] = ['epa_clone_cloned_node_validate'];
  }
  else {
    $form['title']['widget']['#element_validate'] = ['epa_clone_cloned_node_validate'];
  }
}

/**
 * Prevent cloned nodes from saving without title changes.
 */
function epa_clone_cloned_node_validate($element, FormStateInterface &$form_state, $form) {
  $title = $element[0]['value']['#value'];
  $clonedTitleUnchanged = strpos($title, 'Cloned: ') === 0;
  if ($clonedTitleUnchanged) {
    $form_state->setError($element, t('This content has been cloned. Please update the %field field to remove the "Cloned" signifier.', ['%field' => $element['#title']]));
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Hiding some form elements as they are not useful for content author
 */
function epa_clone_form_entity_clone_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Hiding "Cloned -" suffix form field as we force this.
  if (isset($form['no_suffix'])) {
    $form['no_suffix']['#access'] = FALSE;
  }

  // Hiding "Save cloned Content as published" setting as we do not want this either.
  if (isset($form['status'])) {
    $form['status']['#access'] = FALSE;
  }
}
