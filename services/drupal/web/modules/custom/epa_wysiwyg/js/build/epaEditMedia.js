!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.CKEditor5=n():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.epaEditMedia=n())}(self,(function(){return function(){var __webpack_modules__={"../../../core/modules/ckeditor5/js/ckeditor5_plugins/drupalMedia/src/utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getClosestSelectedDrupalMediaElement\": function() { return /* binding */ getClosestSelectedDrupalMediaElement; },\n/* harmony export */   \"getClosestSelectedDrupalMediaWidget\": function() { return /* binding */ getClosestSelectedDrupalMediaWidget; },\n/* harmony export */   \"getPreviewContainer\": function() { return /* binding */ getPreviewContainer; },\n/* harmony export */   \"groupNameToModelAttributeKey\": function() { return /* binding */ groupNameToModelAttributeKey; },\n/* harmony export */   \"isDrupalMedia\": function() { return /* binding */ isDrupalMedia; },\n/* harmony export */   \"isDrupalMediaWidget\": function() { return /* binding */ isDrupalMediaWidget; },\n/* harmony export */   \"isObject\": function() { return /* binding */ isObject; }\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/widget */ \"ckeditor5/src/widget.js\");\n/* eslint-disable import/no-extraneous-dependencies */\n// cspell:ignore documentselection\n\n\n/**\n * Checks if the provided model element is `drupalMedia`.\n *\n * @param {module:engine/model/element~Element} modelElement\n *   The model element to be checked.\n * @return {boolean}\n *   A boolean indicating if the element is a drupalMedia element.\n *\n * @private\n */\nfunction isDrupalMedia(modelElement) {\n  return !!modelElement && modelElement.is('element', 'drupalMedia');\n}\n\n/**\n * Checks if view element is <drupal-media> element.\n *\n * @param {module:engine/view/element~Element} viewElement\n *   The view element.\n * @return {boolean}\n *   A boolean indicating if the element is a <drupal-media> element.\n *\n * @private\n */\nfunction isDrupalMediaWidget(viewElement) {\n  return (\n    (0,ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_0__.isWidget)(viewElement) && !!viewElement.getCustomProperty('drupalMedia')\n  );\n}\n\n/**\n * Gets `drupalMedia` element from selection.\n *\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n *   The current selection.\n * @return {module:engine/model/element~Element|null}\n *   The `drupalMedia` element which could be either the current selected an\n *   ancestor of the selection. Returns null if the selection has no Drupal\n *   Media element.\n *\n * @private\n */\nfunction getClosestSelectedDrupalMediaElement(selection) {\n  const selectedElement = selection.getSelectedElement();\n\n  return isDrupalMedia(selectedElement)\n    ? selectedElement\n    : selection.getFirstPosition().findAncestor('drupalMedia');\n}\n\n/**\n * Gets selected Drupal Media widget if only Drupal Media is currently selected.\n *\n * @param {module:engine/model/selection~Selection} selection\n *   The current selection.\n * @return {module:engine/view/element~Element|null}\n *   The currently selected Drupal Media widget or null.\n *\n * @private\n */\nfunction getClosestSelectedDrupalMediaWidget(selection) {\n  const viewElement = selection.getSelectedElement();\n  if (viewElement && isDrupalMediaWidget(viewElement)) {\n    return viewElement;\n  }\n\n  // Perhaps nothing is selected.\n  if (selection.getFirstPosition() === null) {\n    return null;\n  }\n\n  let parent = selection.getFirstPosition().parent;\n\n  while (parent) {\n    if (parent.is('element') && isDrupalMediaWidget(parent)) {\n      return parent;\n    }\n\n    parent = parent.parent;\n  }\n\n  return null;\n}\n\n/**\n * Checks if value is a JavaScript object.\n *\n * This will return true for any type of JavaScript object. (e.g. arrays,\n * functions, objects, regexes, new Number(0), and new String(''))\n *\n * @param value\n *   Value to check.\n * @return {boolean}\n *   True if value is an object, else false.\n */\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === 'object' || type === 'function');\n}\n\n/**\n * Gets the preview container element from the media element.\n *\n * @param {Iterable.<module:engine/view/element~Element>} children\n *   The child elements.\n * @return {null|module:engine/view/element~Element}\n *   The preview child element if available.\n */\nfunction getPreviewContainer(children) {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const child of children) {\n    if (child.hasAttribute('data-drupal-media-preview')) {\n      return child;\n    }\n\n    if (child.childCount) {\n      const recursive = getPreviewContainer(child.getChildren());\n      // Return only if preview container was found within this element's\n      // children.\n      if (recursive) {\n        return recursive;\n      }\n    }\n  }\n\n  return null;\n}\n\n/**\n * Gets model attribute key based on Drupal Element Style group.\n *\n * @example\n *    Example: 'align' -> 'drupalElementStyleAlign'\n *\n * @param {string} group\n *   The name of the group (ex. 'align', 'viewMode').\n * @return {string}\n *   Model attribute key.\n *\n * @internal\n */\nfunction groupNameToModelAttributeKey(group) {\n  // Manipulate string to have first letter capitalized to append in camel case.\n  const capitalizedFirst = group[0].toUpperCase() + group.substring(1);\n  return `drupalElementStyle${capitalizedFirst}`;\n}\n\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/../../../core/modules/ckeditor5/js/ckeditor5_plugins/drupalMedia/src/utils.js?")},"../../contrib/media_inline_embed/js/ckeditor5_plugins/mediaInlineEmbed/src/utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getClosestSelectedDrupalInlineMediaElement\": function() { return /* binding */ getClosestSelectedDrupalInlineMediaElement; },\n/* harmony export */   \"getClosestSelectedDrupalInlineMediaWidget\": function() { return /* binding */ getClosestSelectedDrupalInlineMediaWidget; },\n/* harmony export */   \"getPreviewContainer\": function() { return /* binding */ getPreviewContainer; },\n/* harmony export */   \"groupNameToModelAttributeKey\": function() { return /* binding */ groupNameToModelAttributeKey; },\n/* harmony export */   \"isDrupalInlineMedia\": function() { return /* binding */ isDrupalInlineMedia; },\n/* harmony export */   \"isDrupalInlineMediaWidget\": function() { return /* binding */ isDrupalInlineMediaWidget; },\n/* harmony export */   \"isObject\": function() { return /* binding */ isObject; }\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/widget */ \"ckeditor5/src/widget.js\");\n/* eslint-disable import/no-extraneous-dependencies */\n// cSpell:words documentselection\n\n\n/**\n * Checks if the provided model element is `drupalMedia`.\n *\n * @param {module:engine/model/element~Element} modelElement\n *   The model element to be checked.\n * @return {boolean}\n *   A boolean indicating if the element is a drupalMedia element.\n *\n * @private\n */\nfunction isDrupalInlineMedia(modelElement) {\n  return !!modelElement && modelElement.is('element', 'drupalInlineMedia');\n}\n\n/**\n * Checks if view element is <drupal-media> element.\n *\n * @param {module:engine/view/element~Element} viewElement\n *   The view element.\n * @return {boolean}\n *   A boolean indicating if the element is a <drupal-media> element.\n *\n * @private\n */\nfunction isDrupalInlineMediaWidget(viewElement) {\n  return (\n    (0,ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_0__.isWidget)(viewElement) && !!viewElement.getCustomProperty('drupalInlineMedia')\n  );\n}\n\n/**\n * Gets `drupalMedia` element from selection.\n *\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n *   The current selection.\n * @return {module:engine/model/element~Element|null}\n *   The `drupalMedia` element which could be either the current selected an\n *   ancestor of the selection. Returns null if the selection has no Drupal\n *   Media element.\n *\n * @private\n */\nfunction getClosestSelectedDrupalInlineMediaElement(selection) {\n  const selectedElement = selection.getSelectedElement();\n\n  return isDrupalInlineMedia(selectedElement)\n    ? selectedElement\n    : selection.getFirstPosition().findAncestor('drupalInlineMedia');\n}\n\n/**\n * Gets selected Drupal Media widget if only Drupal Media is currently selected.\n *\n * @param {module:engine/model/selection~Selection} selection\n *   The current selection.\n * @return {module:engine/view/element~Element|null}\n *   The currently selected Drupal Media widget or null.\n *\n * @private\n */\nfunction getClosestSelectedDrupalInlineMediaWidget(selection) {\n  const viewElement = selection.getSelectedElement();\n  if (viewElement && isDrupalInlineMediaWidget(viewElement)) {\n    return viewElement;\n  }\n\n  let parent = selection.getFirstPosition().parent;\n\n  while (parent) {\n    if (parent.is('element') && isDrupalInlineMediaWidget(parent)) {\n      return parent;\n    }\n\n    parent = parent.parent;\n  }\n\n  return null;\n}\n\n/**\n * Checks if value is a JavaScript object.\n *\n * This will return true for any type of JavaScript object. (e.g. arrays,\n * functions, objects, regexes, new Number(0), and new String(''))\n *\n * @param value\n *   Value to check.\n * @return {boolean}\n *   True if value is an object, else false.\n */\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === 'object' || type === 'function');\n}\n\n/**\n * Gets the preview container element from the media element.\n *\n * @param {Iterable.<module:engine/view/element~Element>} children\n *   The child elements.\n * @return {null|module:engine/view/element~Element}\n *   The preview child element if available.\n */\nfunction getPreviewContainer(children) {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const child of children) {\n    if (child.hasAttribute('data-drupal-inline-media-preview')) {\n      return child;\n    }\n\n    if (child.childCount) {\n      const recursive = getPreviewContainer(child.getChildren());\n      // Return only if preview container was found within this element's\n      // children.\n      if (recursive) {\n        return recursive;\n      }\n    }\n  }\n\n  return null;\n}\n\n/**\n * Gets model attribute key based on Drupal Element Style group.\n *\n * @example\n *    Example: 'align' -> 'drupalElementStyleAlign'\n *\n * @param {string} group\n *   The name of the group (ex. 'align', 'viewMode').\n * @return {string}\n *   Model attribute key.\n *\n * @internal\n */\nfunction groupNameToModelAttributeKey(group) {\n  // Manipulate string to have first letter capitalized to append in camel case.\n  const capitalizedFirst = group[0].toUpperCase() + group.substring(1);\n  return `drupalElementStyle${capitalizedFirst}`;\n}\n\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/../../contrib/media_inline_embed/js/ckeditor5_plugins/mediaInlineEmbed/src/utils.js?")},"./js/ckeditor5_plugins/epaEditMedia/src/editdrupalmedia.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": function() { return /* binding */ EditDrupalMedia; }\n/* harmony export */ });\n/* harmony import */ var _epadrupalmediaui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./epadrupalmediaui */ "./js/ckeditor5_plugins/epaEditMedia/src/epadrupalmediaui.js");\n/* harmony import */ var _epafileurlui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./epafileurlui */ "./js/ckeditor5_plugins/epaEditMedia/src/epafileurlui.js");\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n\n\n\n\nclass EditDrupalMedia extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_2__.Plugin {\n  // Note that SimpleBoxEditing and SimpleBoxUI also extend `Plugin`, but these\n  // are not seen as individual plugins by CKEditor 5. CKEditor 5 will only\n  // discover the plugins explicitly exported in index.js.\n  static get requires() {\n    return [_epadrupalmediaui__WEBPACK_IMPORTED_MODULE_0__["default"], _epafileurlui__WEBPACK_IMPORTED_MODULE_1__["default"]];\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/./js/ckeditor5_plugins/epaEditMedia/src/editdrupalmedia.js?')},"./js/ckeditor5_plugins/epaEditMedia/src/editdrupalmediacommand.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": function() { return /* binding */ EditDrupalMediaCommand; }\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _core_modules_ckeditor5_js_ckeditor5_plugins_drupalMedia_src_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../core/modules/ckeditor5/js/ckeditor5_plugins/drupalMedia/src/utils */ "../../../core/modules/ckeditor5/js/ckeditor5_plugins/drupalMedia/src/utils.js");\n/* harmony import */ var _contrib_media_inline_embed_js_ckeditor5_plugins_mediaInlineEmbed_src_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../contrib/media_inline_embed/js/ckeditor5_plugins/mediaInlineEmbed/src/utils */ "../../contrib/media_inline_embed/js/ckeditor5_plugins/mediaInlineEmbed/src/utils.js");\n\n\n\n\nclass EditDrupalMediaCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\n  execute() {\n    const modelElement = this.editor.model.document.selection.getSelectedElement();\n    const metadataRepository = this.editor.plugins.get(\n      \'DrupalMediaMetadataRepository\'\n    );\n\n    if ((0,_core_modules_ckeditor5_js_ckeditor5_plugins_drupalMedia_src_utils__WEBPACK_IMPORTED_MODULE_1__.isDrupalMedia)(modelElement) || (0,_contrib_media_inline_embed_js_ckeditor5_plugins_mediaInlineEmbed_src_utils__WEBPACK_IMPORTED_MODULE_2__.isDrupalInlineMedia)(modelElement)) {\n      metadataRepository\n        .getMetadata(modelElement)\n        .then((metadata) => {\n          window.open(metadata.edit_url, \'_blank\');\n        })\n        .catch((e) => {\n          // There isn\'t any UI indication for errors because this should be\n          // always called after the Drupal Media has been upcast, which would\n          // already display an error in the UI.\n          // @see module:drupalMedia/mediaimagetextalternative/mediaimagetextalternativeediting~MediaImageTextAlternativeEditing\n          console.warn(e.toString());\n        });\n    }\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/./js/ckeditor5_plugins/epaEditMedia/src/editdrupalmediacommand.js?')},"./js/ckeditor5_plugins/epaEditMedia/src/epadrupalmediaui.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ EpaDrupalMediaUI; }\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var _icons_file_pen_solid_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../icons/file-pen-solid.svg */ \"./icons/file-pen-solid.svg\");\n/* harmony import */ var _editdrupalmediacommand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./editdrupalmediacommand */ \"./js/ckeditor5_plugins/epaEditMedia/src/editdrupalmediacommand.js\");\n\n\n\n\n\nclass EpaDrupalMediaUI extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  /**\n   * @inheritdoc\n   */\n  static get requires() {\n    return ['DrupalMediaEditing'];\n  }\n\n  /**\n   * @inheritdoc\n   */\n  static get pluginName() {\n    return 'EditDrupalMediaUi';\n  }\n\n  init() {\n    this._createToolbarEditMediaButton();\n    this.editor.commands.add(\n      'EditDrupalMedia',\n      new _editdrupalmediacommand__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.editor),\n    );\n  }\n\n  /**\n   * Creates a `DrupalLinkMediaUI` button view.\n   *\n   * Clicking this button shows a {@link module:link/linkui~LinkUI#_balloon}\n   * attached to the selection. When an media is already linked, the view shows\n   * {@link module:link/linkui~LinkUI#actionsView} or\n   * {@link module:link/linkui~LinkUI#formView} if it is not.\n   */\n  _createToolbarEditMediaButton() {\n    const { editor } = this;\n\n    editor.ui.componentFactory.add('EditDrupalMediaButton', (locale) => {\n      const button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView(locale);\n      const linkCommand = editor.commands.get('EditDrupalMedia');\n\n      button.set({\n        isEnabled: true,\n        label: Drupal.t('Edit Media'),\n        icon: _icons_file_pen_solid_svg__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        tooltip: true,\n      });\n\n      // Bind button to the command.\n      button.bind('isEnabled').to(linkCommand, 'isEnabled');\n\n      this.listenTo(button, 'execute', () => {\n        editor.execute('EditDrupalMedia');\n      });\n\n      return button;\n    });\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/./js/ckeditor5_plugins/epaEditMedia/src/epadrupalmediaui.js?")},"./js/ckeditor5_plugins/epaEditMedia/src/epafileurlui.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": function() { return /* binding */ EpaFileUrlUI; }\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ "ckeditor5/src/ui.js");\n/* harmony import */ var _core_modules_ckeditor5_js_ckeditor5_plugins_drupalMedia_src_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../core/modules/ckeditor5/js/ckeditor5_plugins/drupalMedia/src/utils */ "../../../core/modules/ckeditor5/js/ckeditor5_plugins/drupalMedia/src/utils.js");\n/* harmony import */ var _contrib_media_inline_embed_js_ckeditor5_plugins_mediaInlineEmbed_src_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../contrib/media_inline_embed/js/ckeditor5_plugins/mediaInlineEmbed/src/utils */ "../../contrib/media_inline_embed/js/ckeditor5_plugins/mediaInlineEmbed/src/utils.js");\n/* harmony import */ var _icons_copy_solid_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../icons/copy-solid.svg */ "./icons/copy-solid.svg");\n\n\n\n\n\n\nclass EpaFileUrlUI extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  /**\n   * @inheritdoc\n   */\n  static get requires() {\n    return [\'DrupalMediaEditing\'];\n  }\n\n  /**\n   * @inheritdoc\n   */\n  static get pluginName() {\n    return \'CopyFilepath\';\n  }\n\n  init() {\n    this._createToolbarCopyFilepathButton();\n  }\n\n  /**\n   * Creates a `DrupalLinkMediaUI` button view.\n   *\n   * Clicking this button shows a {@link module:link/linkui~LinkUI#_balloon}\n   * attached to the selection. When an media is already linked, the view shows\n   * {@link module:link/linkui~LinkUI#actionsView} or\n   * {@link module:link/linkui~LinkUI#formView} if it is not.\n   */\n  _createToolbarCopyFilepathButton() {\n    const { editor } = this;\n\n    editor.ui.componentFactory.add(\'CopyFilepathButton\', (locale) => {\n      const button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView(locale);\n      // const linkCommand = editor.commands.get(\'EditDrupalMedia\');\n\n      button.set({\n        isEnabled: true,\n        label: Drupal.t(\'Copy file path\'),\n        icon: _icons_copy_solid_svg__WEBPACK_IMPORTED_MODULE_4__["default"],\n        tooltip: true,\n      });\n\n      this.listenTo(button, \'execute\', () => {\n        const modelElement = editor.model.document.selection.getSelectedElement();\n        const metadataRepository = editor.plugins.get(\n          \'DrupalMediaMetadataRepository\'\n        );\n\n        if ((0,_core_modules_ckeditor5_js_ckeditor5_plugins_drupalMedia_src_utils__WEBPACK_IMPORTED_MODULE_2__.isDrupalMedia)(modelElement) || (0,_contrib_media_inline_embed_js_ckeditor5_plugins_mediaInlineEmbed_src_utils__WEBPACK_IMPORTED_MODULE_3__.isDrupalInlineMedia)(modelElement)) {\n          metadataRepository\n            .getMetadata(modelElement)\n            .then((metadata) => {\n              navigator.clipboard.writeText(metadata.imageSourceMetadata.filepath);\n              alert("Copied the file path: " + metadata.imageSourceMetadata.filepath);\n            })\n            .catch((e) => {\n              // There isn\'t any UI indication for errors because this should be\n              // always called after the Drupal Media has been upcast, which would\n              // already display an error in the UI.\n              // @see module:drupalMedia/mediaimagetextalternative/mediaimagetextalternativeediting~MediaImageTextAlternativeEditing\n              console.warn(e.toString());\n            });\n        }\n\n\n      });\n\n      return button;\n    });\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/./js/ckeditor5_plugins/epaEditMedia/src/epafileurlui.js?')},"./js/ckeditor5_plugins/epaEditMedia/src/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _editdrupalmedia__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./editdrupalmedia */ "./js/ckeditor5_plugins/epaEditMedia/src/editdrupalmedia.js");\n\n\n/* harmony default export */ __webpack_exports__["default"] = ({\n  EditDrupalMedia: _editdrupalmedia__WEBPACK_IMPORTED_MODULE_0__["default"],\n});\n\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/./js/ckeditor5_plugins/epaEditMedia/src/index.js?')},"./icons/copy-solid.svg":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = ("<svg xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\">\x3c!--! Font Awesome Pro 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --\x3e<path d=\\"M272 0H396.1c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9V336c0 26.5-21.5 48-48 48H272c-26.5 0-48-21.5-48-48V48c0-26.5 21.5-48 48-48zM48 128H192v64H64V448H256V416h64v48c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/./icons/copy-solid.svg?')},"./icons/file-pen-solid.svg":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = ("<svg xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 576 512\\">\x3c!--! Font Awesome Pro 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --\x3e<path d=\\"M0 64C0 28.7 28.7 0 64 0H224V128c0 17.7 14.3 32 32 32H384V285.7l-86.8 86.8c-10.3 10.3-17.5 23.1-21 37.2l-18.7 74.9c-2.3 9.2-1.8 18.8 1.3 27.5H64c-35.3 0-64-28.7-64-64V64zm384 64H256V0L384 128zM549.8 235.7l14.4 14.4c15.6 15.6 15.6 40.9 0 56.6l-29.4 29.4-71-71 29.4-29.4c15.6-15.6 40.9-15.6 56.6 0zM311.9 417L441.1 287.8l71 71L382.9 487.9c-4.1 4.1-9.2 7-14.9 8.4l-60.1 15c-5.5 1.4-11.2-.2-15.2-4.2s-5.6-9.7-4.2-15.2l15-60.1c1.4-5.6 4.3-10.8 8.4-14.9z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/./icons/file-pen-solid.svg?')},"ckeditor5/src/core.js":function(module,__unused_webpack_exports,__webpack_require__){eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/core.js");\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/delegated_./core.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/ui.js":function(module,__unused_webpack_exports,__webpack_require__){eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/ui.js");\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/delegated_./ui.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/widget.js":function(module,__unused_webpack_exports,__webpack_require__){eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/widget.js");\n\n//# sourceURL=webpack://CKEditor5.epaEditMedia/delegated_./widget.js_from_dll-reference_CKEditor5.dll?')},"dll-reference CKEditor5.dll":function(e){"use strict";e.exports=CKEditor5.dll}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var i=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](i,i.exports,__webpack_require__),i.exports}__webpack_require__.d=function(e,n){for(var i in n)__webpack_require__.o(n,i)&&!__webpack_require__.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},__webpack_require__.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./js/ckeditor5_plugins/epaEditMedia/src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__}()}));