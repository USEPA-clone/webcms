/*
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
========================================
========================================
========================================
----------------------------------------
GENERAL SETTINGS
----------------------------------------
Read more about settings and
USWDS style tokens in the documentation:
https://designsystem.digital.gov/design-tokens
----------------------------------------
*/
/*
----------------------------------------
Image path
----------------------------------------
Relative image file path
----------------------------------------
*/
/*
----------------------------------------
Show compile warnings
----------------------------------------
Show Sass warnings when functions and
mixins use non-standard tokens.
AND
Show updates and notifications.
----------------------------------------
*/
/*
----------------------------------------
Namespace
----------------------------------------
*/
/*
----------------------------------------
Prefix separator
----------------------------------------
Set the character the separates
responsive and state prefixes from the
main class name.
The default (":") needs to be preceded
by two backslashes to be properly
escaped.
----------------------------------------
*/
/*
----------------------------------------
Layout grid
----------------------------------------
Should the layout grid classes output
with !important
----------------------------------------
*/
/*
----------------------------------------
Border box sizing
----------------------------------------
When set to true, sets the box-sizing
property of all site elements to
`border-box`.
----------------------------------------
*/
/*
----------------------------------------
Focus styles
----------------------------------------
*/
/*
----------------------------------------
Icons
----------------------------------------
*/
/*
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
========================================
========================================
========================================
----------------------------------------
TYPOGRAPHY SETTINGS
----------------------------------------
Read more about settings and
USWDS typography tokens in the documentation:
https://designsystem.digital.gov/design-tokens/typesetting/overview/
----------------------------------------
*/
/*
----------------------------------------
Root font size
----------------------------------------
Setting $theme-respect-user-font-size to
true sets the root font size to 100% and
uses ems for media queries
----------------------------------------
$theme-root-font-size only applies when
$theme-respect-user-font-size is set to
false.

This will set the root font size
as a specific px value and use px values
for media queries.

Accepts true or false
----------------------------------------
*/
/*
----------------------------------------
Global styles
----------------------------------------
Adds basic styling for the following
unclassed elements:

- paragraph: paragraph text
- link: links
- content: paragraph text, links,
  headings, lists, and tables
----------------------------------------
*/
/*
----------------------------------------
Font path
----------------------------------------
Relative font file path
----------------------------------------
*/
/*
----------------------------------------
Custom typeface tokens
----------------------------------------
Add a new custom typeface token if
your project uses a typeface not already
defined by USWDS.
----------------------------------------
USWDS defines the following tokens
by default:
----------------------------------------
'georgia'
'helvetica'
'merriweather'
'open-sans'
'public-sans'
'roboto-mono'
'source-sans-pro'
'system'
'tahoma'
'verdana'
----------------------------------------
Add as many new tokens as you have
custom typefaces. Reference your new
token(s) in the type-based font settings
using the quoted name of the token.

For example:

$theme-font-type-cond: 'example-font-token';

display-name:
The display name of your font

cap-height:
The height of a 500px `N` in Sketch
----------------------------------------
You should change `example-[style]-token`
names to something more descriptive.
----------------------------------------
*/
/*
----------------------------------------
Type-based font settings
----------------------------------------
Set the type-based tokens for your
project from the following tokens,
or from any new font tokens you added in
$theme-typeface-tokens.
----------------------------------------
'georgia'
'helvetica'
'merriweather'
'open-sans'
'public-sans'
'roboto-mono'
'source-sans-pro'
'system'
'tahoma'
'verdana'
----------------------------------------
*/
/*
----------------------------------------
Custom font stacks
----------------------------------------
Add custom font stacks to any of the
type-based fonts. Any USWDS typeface
token already has a default stack.

Custom stacks don't need to include the
font's display name. It will
automatically appear at the start of
the stack.
----------------------------------------
Example:
$theme-font-type-sans: 'source-sans-pro';
$theme-font-sans-custom-stack: "Helvetica Neue", Helvetica, Arial, sans;

Output:
font-family: "Source Sans Pro", "Helvetica Neue", Helvetica, Arial, sans;
----------------------------------------
*/
/*
----------------------------------------
Add any custom font source files
----------------------------------------
If you want USWDS to generate additional
@font-face declarations, add your font
data below, following the example that
follows.
----------------------------------------
USWDS automatically generates @font-face
declarations for the following

'merriweather'
'public-sans'
'roboto-mono'
'source-sans-pro'

These typefaces not require custom
source files.
----------------------------------------
EXAMPLE

- dir:
  Directory relative to $theme-font-path
- This directory should include fonts saved as
  .ttf, .woff, and .woff2
  ExampleSerif-Normal.ttf
  ExampleSerif-Normal.woff
  ExampleSerif-Normal.woff2

$theme-font-serif-custom-src: (
  dir: 'custom/example-serif',
  roman: (
    100: false,
    200: false,
    300: 'ExampleSerif-Light',
    400: 'ExampleSerif-Normal',
    500: false,
    600: false,
    700: 'ExampleSerif-Bold',
    800: false,
    900: false,
  ),
  italic: (
    100: false,
    200: false,
    300: 'ExampleSerif-LightItalic',
    400: 'ExampleSerif-Italic',
    500: false,
    600: false,
    700: 'ExampleSerif-BoldItalic',
    800: false,
    900: false,
  ),
);
----------------------------------------
*/
/*
----------------------------------------
Role-based font settings
----------------------------------------
Set the role-based tokens for your
project from the following font-type
tokens.
----------------------------------------
'cond'
'icon'
'lang'
'mono'
'sans'
'serif'
----------------------------------------
*/
/*
----------------------------------------
Type scale
----------------------------------------
Define your project's type scale using
values from the USWDS system type scale

1-20
----------------------------------------
*/
/*
----------------------------------------
Font weights
----------------------------------------
Assign weights 100-900
Or use `false` for unneeded weights.
----------------------------------------
*/
/*
----------------------------------------
General typography settings
----------------------------------------
Type scale tokens
----------------------------------------
micro:      10px
1:          12px
2:          13px
3:          14px
4:          15px
5:          16px
6:          17px
7:          18px
8:          20px
9:          22px
10:         24px
11:         28px
12:         32px
13:         36px
14:         40px
15:         48px
16:         56px
17:         64px
18:         80px
19:         120px
20:         140px
----------------------------------------
Line height tokens
----------------------------------------
1:    1
2:    1.15
3:    1.35
4:    1.5
5:    1.62
6:    1.75
----------------------------------------
Font role tokens
----------------------------------------
'ui'
'heading'
'body'
'code'
'alt'
----------------------------------------
Measure (max-width) tokens
----------------------------------------
1:       44ex
2:       60ex
3:       64ex
4:       68ex
5:       74ex
6:       88ex
none:    none
----------------------------------------
*/
/*
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
========================================
========================================
========================================
----------------------------------------
COLOR SETTINGS
----------------------------------------
Read more about settings and
USWDS color tokens in the documentation:
https://designsystem.digital.gov/design-tokens/color
----------------------------------------
*/
/*
----------------------------------------
Theme palette colors
----------------------------------------
*/
/*
----------------------------------------
State palette colors
----------------------------------------
*/
/*
----------------------------------------
General colors
----------------------------------------
*/
/*
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
========================================
========================================
========================================
----------------------------------------
COMPONENT SETTINGS
----------------------------------------
Read more about settings and
USWDS style tokens in the documentation:
https://designsystem.digital.gov/design-tokens
----------------------------------------
*/
/*
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
========================================
========================================
========================================
----------------------------------------
SPACING SETTINGS
----------------------------------------
Read more about settings and
USWDS spacing units tokens in the
documentation:
https://designsystem.digital.gov/design-tokens/spacing-units
----------------------------------------
*/
/*
----------------------------------------
Border radius
----------------------------------------
2px           2px
0.5           4px
1             8px
1.5           12px
2             16px
2.5           20px
3             24px
4             32px
5             40px
6             48px
7             56px
8             64px
9             72px
----------------------------------------
*/
/*
----------------------------------------
Column gap
----------------------------------------
2px         2px
0.5         4px
1           8px
2           16px
3           24px
4           32px
5           40px
6           48px
----------------------------------------
*/
/*
----------------------------------------
Grid container max-width
----------------------------------------
mobile
mobile-lg
tablet
tablet-lg
desktop
desktop-lg
widescreen
----------------------------------------
*/
/*
----------------------------------------
Site
----------------------------------------
*/
/*
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
* * * * * ==============================
========================================
========================================
========================================
----------------------------------------
UTILITIES SETTINGS
----------------------------------------
Read more about settings and
USWDS utilities in the documentation:
https://designsystem.digital.gov/utilities
----------------------------------------
*/
/*
----------------------------------------
Utility breakpoints
----------------------------------------
Which breakpoints does your project
need? Select as `true` any breakpoint
used by utilities or layout grid
----------------------------------------
*/
/*
----------------------------------------
Global colors
----------------------------------------
The following palettes will be added to
- background-color
- border-color
- color
- text-decoration-color
----------------------------------------
*/
/*
----------------------------------------
Settings
----------------------------------------
*/
/*
----------------------------------------
Values
----------------------------------------
*/
/*
----------------------------------------
px-to-rem()
----------------------------------------
Converts a value in px to a value in rem
----------------------------------------
*/
/*
----------------------------------------
rem-to-px()
----------------------------------------
Converts a value in rem to a value in px
----------------------------------------
*/
/*
----------------------------------------
rem-to-user-em()
----------------------------------------
Converts a value in rem to a value in
[user-settings] em for use in media
queries
----------------------------------------
*/
/*
----------------------------------------
spacing-multiple()
----------------------------------------
Converts a spacing unit multiple into
the desired final units (currently rem)
----------------------------------------
*/
/*
----------------------------------------
uswds-error()
----------------------------------------
Allow the system to pass an error as text
to test error states in unit testing
----------------------------------------
*/
/*
----------------------------------------
error-not-token()
----------------------------------------
Returns a common not-a-token error.
----------------------------------------
*/
/*
----------------------------------------
get-last()
----------------------------------------
Return the last item of a list,
Return null if the value is null
----------------------------------------
*/
/*
----------------------------------------
append-important()
----------------------------------------
Append `!important` to a list
----------------------------------------
*/
/*
----------------------------------------
de-list()
----------------------------------------
Transform a one-element list or arglist
into that single element.
----------------------------------------
(1) => 1
((1)) => (1)
----------------------------------------
*/
/*
----------------------------------------
get-default()
----------------------------------------
Returns the default value from a map
of project defaults
get-default("bg-color")
> $theme-body-background-color
----------------------------------------
*/
/*
----------------------------------------
has-important()
----------------------------------------
Check to see if `!important` is
being passed in a mixin's props
----------------------------------------
*/
/*
----------------------------------------
map-collect()
----------------------------------------
Collect multiple maps into a single
large map
source: https://gist.github.com/bigglesrocks/d75091700f8f2be5abfe
----------------------------------------
*/
/*
----------------------------------------
map-deep-get()
----------------------------------------
@author Hugo Giraudel
@access public
@param {Map} $map - Map
@param {Arglist} $keys - Key chain
@return {*} - Desired value
----------------------------------------
*/
/*
----------------------------------------
multi-cat()
----------------------------------------
Concatenate two lists
----------------------------------------
*/
/*
----------------------------------------
remove()
----------------------------------------
Remove a value from a list
----------------------------------------
*/
/*
----------------------------------------
smart-quote()
----------------------------------------
Quotes strings
Inspects `px`, `xs`, and `xl` numbers
Leaves bools as is
----------------------------------------
*/
/*
----------------------------------------
str-replace()
----------------------------------------
Replace any substring with another
string
----------------------------------------
*/
/*
----------------------------------------
str-split()
----------------------------------------
Split a string at a given separator
and convert into a list of substrings
----------------------------------------
*/
/*
----------------------------------------
strip-unit()
----------------------------------------
Remove the unit of a length
@author Hugo Giraudel
@param {Number} $number - Number to remove unit from
@return {Number} - Unitless number
----------------------------------------
*/
/*
----------------------------------------
base-to-map()
@TODO: Deprecate and delete
----------------------------------------
Convert a single base to a USWDS
value map.

Candidate for deprecation if we remove
isReadable
----------------------------------------
*/
/*
----------------------------------------
to-number()
----------------------------------------
Casts a string into a number
----------------------------------------
@param {String | Number} $value - Value to be parsed
@return {Number}
----------------------------------------
*/
/*
----------------------------------------
unpack()
----------------------------------------
Create lists of single items from lists
of lists.
----------------------------------------
(1, (2.1, 2.2), 3) -->
(1, 2.1, 2.2, 3)
----------------------------------------
*/
/*
----------------------------------------
number-to-token()
----------------------------------------
Converts an integer or numeric value
into a system value

Ex: 0.5   --> '05'
    -1px  --> 'neg-1px'
----------------------------------------
*/
/*
----------------------------------------
units()
----------------------------------------
Converts a spacing unit into
the desired final units (currently rem)
----------------------------------------
*/
/*
----------------------------------------
Project fonts
----------------------------------------
Collects font settings in a map for
looping.
----------------------------------------
*/
/*
----------------------------------------
Luminance ranges
----------------------------------------
*/
/*
----------------------------------------
ns()
----------------------------------------
Add a namesspace of $type if that
namespace is set to output
----------------------------------------
*/
/*
----------------------------------------
get-system-color()
----------------------------------------
Derive a system color from its
family, value, and vivid or a passed
variable that is, itself, a list
----------------------------------------
*/
/*
----------------------------------------
set-theme-color()
----------------------------------------
Derive a color from a system color token
or a hex value
----------------------------------------
*/
/*
----------------------------------------
Line height
----------------------------------------
*/
/*
----------------------------------------
Measure
----------------------------------------
*/
/*
----------------------------------------
validate-typeface-token()
----------------------------------------
Check to see if a typeface-token exists.
Throw an error if a passed token does
not exist in the typeface-token map.
----------------------------------------
*/
/*
----------------------------------------
cap-height()
----------------------------------------
Get the cap height of a valid typeface
----------------------------------------
*/
/*
----------------------------------------
convert-to-font-type()
----------------------------------------
Converts a font-role token into a
font-type token. Leaves font-type tokens
unchanged.
----------------------------------------
*/
/*
----------------------------------------
get-font-stack()
----------------------------------------
Get a font stack from a style- or
role-based font token.
----------------------------------------
*/
/*
----------------------------------------
get-typeface-token()
----------------------------------------
Get a typeface token from a font-type or
font-role token.
----------------------------------------
*/
/*
----------------------------------------
normalize-type-scale()
----------------------------------------
Normalizes a specific face's optical size
to a set target
----------------------------------------
*/
/*
----------------------------------------
system-type-scale()
----------------------------------------
Get a value from the system type scale
----------------------------------------
*/
/*
----------------------------------------
Easing
----------------------------------------
*/
/*  deprecated.scss
    ---
    Occasionally the design system will deprecate
    old variables or functionality. If we replace
    the old functionality with something new, this is a
    place to connect the old functionality to the
    new functionality, in the service of better
    continuity and backwards compatibility within a
    major release cycle.

    Note the USWDS version where we deprecated the
    old functionality in a comment.

    Be sure to update notifications.scss.

    This file should started fresh at each
    major version.
*/
/*
----------------------------------------
advanced-color()
----------------------------------------
Derive a color from a color triplet:
[family], [grade], [variant]
----------------------------------------
*/
/*
----------------------------------------
is-system-color-token()
----------------------------------------
Return whether a token is a system
color token
----------------------------------------
*/
/*
----------------------------------------
is-theme-color-token()
----------------------------------------
Return whether a token is a theme
color token
----------------------------------------
*/
/*
----------------------------------------
color-token-assignment()
----------------------------------------
Get the system token equivalent of any
theme color token
----------------------------------------
*/
/*
----------------------------------------
decompose()
----------------------------------------
Convert a color token into into a list
of form [family], [grade], [variant]
Vivid variants return "vivid" as the
variant.
If neither grade nor variant exists,
returns 'null'
----------------------------------------
*/
/*
----------------------------------------
color-token-family()
----------------------------------------
Returns the family of a color token.
Returns: color-family
color-token-family("accent-warm-vivid")
> "accent-warm"
color-token-family("red-50v")
> "red"
color-token-variant(("red", 50, "vivid"))
> "red"
----------------------------------------
*/
/*
----------------------------------------
color-token-grade()
----------------------------------------
Returns the grade of a USWDS color token.
Returns: color-grade
color-token-grade("accent-warm")
> "root"
color-token-grade("accent-warm-vivid")
> "root"
color-token-grade("accent-warm-darker")
> "darker"
color-token-grade("red-50v")
> 50
color-token-variant(("red", 50, "vivid"))
> 50
----------------------------------------
*/
/*
----------------------------------------
is-color-token()
----------------------------------------
Returns whether a given string is a
USWDS color token.
----------------------------------------
*/
/*
----------------------------------------
pow()
----------------------------------------
Raises a unitless number to the power
of another unitless number
Includes helper functions
----------------------------------------
*/
/*
----------------------------------------
Helper functions
----------------------------------------
*/
/* factorial()
----------------------------------------
*/
/* summation()
----------------------------------------
*/
/* exp-maclaurin()
----------------------------------------
*/
/* ln()
----------------------------------------
*/
/*
----------------------------------------
luminance()
----------------------------------------
Returns the luminance of `$color` as a float (between 0 and 1)
1 is pure white, 0 is pure black

@param {Color} $color - Color
@return {Number}
@link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef Reference
----------------------------------------
*/
/*
----------------------------------------
calculate-grade()
----------------------------------------
Derive the grade equivalent any color,
even non-token colors
----------------------------------------
*/
/*
----------------------------------------
color-token-type()
----------------------------------------
Returns the type of a color token.
Returns: "system" | "theme"
----------------------------------------
*/
/*
----------------------------------------
color-token-variant()
----------------------------------------
Returns the variant of color token.
Returns: "vivid" | false
color-token-variant("accent-warm")
> false
color-token-variant("accent-warm-vivid")
> "vivid"
color-token-variant("red-50v")
> "vivid"
color-token-variant(("red", 50, "vivid"))
> "vivid"
----------------------------------------
*/
/*
----------------------------------------
magic-number()
----------------------------------------
Returns the magic number of two color
grades. Takes numbers or color tokens.
magic-number(50, 10)
return: 40
magic-number("red-50", "red-10")
return: 40
----------------------------------------
*/
/*
----------------------------------------
wcag-magic-number()
----------------------------------------
Returns the magic number of a specific
wcag grade:
"AA"
"AA-Large"
"AAA"
wcag-magic-number("AA")
> 50
----------------------------------------
*/
/*
----------------------------------------
is-accessible-magic-number()
----------------------------------------
Returns whether two grades achieve
specified target color contrast
Returns: true | false
is-accessible-magic-number(10, 50, "AA")
> false
is-accessible-magic-number(10, 60, "AA")
> true
----------------------------------------
*/
/*
----------------------------------------
next-token()
----------------------------------------
Returns next "darker" or "lighter" color
token of the same token type and variant.
Returns: color-token | false
next-token("accent-warm", "lighter")
> "accent-warm-light"
next-token("gray-10", "lighter")
> "gray-5"
next-token("gray-5", "lighter")
> "white"
next-token("white", "lighter")
> false
next-token("red-50v", "darker")
> "red-60v"
next-token("red-50", "darker")
> "red-60"
next-token("red-80v", "darker")
> "red-90"
next-token("red-90", "darker")
> "black"
next-token("white", "darker")
> "gray-5"
next-token("black", "lighter")
> "gray-90"
----------------------------------------
*/
/*
----------------------------------------
get-link-tokens-from-bg()
----------------------------------------
Get accessible link colors for a given
background color
returns: link-token, hover-token
get-link-tokens-from-bg(
  "black",
  "red-60",
  "red-10",
  "AA")
> "red-10", "red-5"
get-link-tokens-from-bg(
  "black",
  "red-60v",
  "red-10v",
  "AA-large")
> "red-60v", "red-50v"
get-link-tokens-from-bg(
  "black",
  "red-5v",
  "red-60v",
  "AA")
> "red-5v", "white"
get-link-tokens-from-bg(
  "black",
  "white",
  "red-60v",
  "AA")
> "white", "white"
----------------------------------------
*/
/*
----------------------------------------
test-colors()
----------------------------------------
Check to see if all system colors
fall between the proper relative
luminance range for their grade.
Has a couple quirks, as the luminance()
function returns slightly different
results than expected.
----------------------------------------
*/
/*
----------------------------------------
columns()
----------------------------------------
outputs a grid-col number based on
the number of desired columns in the
12-column grid

Ex: columns(2) --> 6
    grid-col(columns(2))
----------------------------------------
*/
/*
----------------------------------------
USWDS Properties
----------------------------------------
*/
/*
----------------------------------------
get-uswds-value()
----------------------------------------
Finds and outputs a value from the
USWDS standard values.

Used to build other standard utility
functions and mixins.
----------------------------------------
*/
/*
----------------------------------------
get-standard-values()
----------------------------------------
Gets a map of USWDS standard values
for a property
----------------------------------------
*/
/*
----------------------------------------
color()
----------------------------------------
Derive a color from a color shortcode
----------------------------------------
*/
/*
----------------------------------------
border-radius()
----------------------------------------
Get a border-radius from the system
border-radii
----------------------------------------
*/
/*
----------------------------------------
font-weight()
fw()
----------------------------------------
Get a font-weight value from the
system font-weight
----------------------------------------
*/
/*
----------------------------------------
feature()
----------------------------------------
Gets a valid USWDS font feature setting
----------------------------------------
*/
/*
----------------------------------------
flex()
----------------------------------------
Gets a valid USWDS flex value
----------------------------------------
*/
/*
----------------------------------------
font-family()
family()
----------------------------------------
Get a font-family stack from a
role-based or type-based font family
----------------------------------------
*/
/*
----------------------------------------
letter-spacing()
ls()
----------------------------------------
Get a letter-spacing value from the
system letter-spacing
----------------------------------------
*/
/*
----------------------------------------
measure()
----------------------------------------
Gets a valid USWDS reading line length
----------------------------------------
*/
/*
----------------------------------------
opacity()
----------------------------------------
Get an opacity from the system
opacities
----------------------------------------
*/
/*
----------------------------------------
order()
----------------------------------------
Get an order value from the
system orders
----------------------------------------
*/
/*
----------------------------------------
radius()
----------------------------------------
Get a border-radius value from the
system letter-spacing
----------------------------------------
*/
/*
----------------------------------------
font-size()
----------------------------------------
Get type scale value from a [family] and
[scale]
----------------------------------------
*/
/*
----------------------------------------
z-index()
z()
----------------------------------------
Get a z-index value from the
system z-index
----------------------------------------
*/
/*
----------------------------------------
utility-font()
----------------------------------------
Get a normalized font-size in rem from
a family and a type size in either
system scale or project scale
----------------------------------------
Not the public-facing function.
Used for building the utilities and
withholds certain errors.
----------------------------------------
*/
/*
----------------------------------------
family()
----------------------------------------
Get a font-family stack
----------------------------------------
*/
/*
----------------------------------------
size()
----------------------------------------
Get a normalized font-size in rem from
a family and a type size in either
system scale or project scale
----------------------------------------
*/
/*
----------------------------------------
font()
----------------------------------------
Get a font-family stack
AND
Get a normalized font-size in rem from
a family and a type size in either
system scale or project scale
----------------------------------------
*/
/*
----------------------------------------
typeset()
----------------------------------------
Sets:
- family
- size
- line-height
----------------------------------------
*/
/* stylelint-disable max-nesting-depth */
/*
----------------------------------------
@render-pseudoclass
----------------------------------------
Build a pseucoclass utiliy from values
calculated in the @render-utilities-in
loop
----------------------------------------
*/
/*
----------------------------------------
@render-utility
----------------------------------------
Build a utility from values calculated
in the @render-utilities-in loop
----------------------------------------
TODO: Determine the proper use of
unquote() in the following. Changed to
account for a 'interpolation near
operators will be simplified in a
future version of Sass' warning.
----------------------------------------
*/
/*
----------------------------------------
@render-utilities-in
----------------------------------------
The master loop that sets the building
blocks of utilities from the values
in individual rule settings and loops
through all possible variants
----------------------------------------
*/
/* stylelint-enable */
/*  notifications.scss
    ---
    Adds a notification at the top of each USWDS
    compile. Use this file for important notifications
    and updates to the design system.

    This file should started fresh at each
    major version.

*/
/* prettier-ignore */
/* prettier-ignore */
ol, ul {
  margin-bottom: 1em;
  margin-top: 1em;
  line-height: 1.5;
  padding-left: 3ch;
}
ol:last-child, ul:last-child {
  margin-bottom: 0;
}
ol ul, ul ul,
ol ol,
ul ol {
  margin-top: 0.25em;
}

li {
  margin-bottom: 0.25em;
  max-width: 68ex;
}
li:last-child {
  margin-bottom: 0;
}

/* stylelint-disable */
@font-face {
  font-family: "Roboto Mono Web";
  font-style: normal;
  font-weight: 300;
  font-display: fallback;
  src: url(../fonts/roboto-mono/roboto-mono-v5-latin-300.woff2) format("woff2"), url(../fonts/roboto-mono/roboto-mono-v5-latin-300.woff) format("woff"), url(../fonts/roboto-mono/roboto-mono-v5-latin-300.ttf) format("truetype");
}
@font-face {
  font-family: "Roboto Mono Web";
  font-style: normal;
  font-weight: 400;
  font-display: fallback;
  src: url(../fonts/roboto-mono/roboto-mono-v5-latin-regular.woff2) format("woff2"), url(../fonts/roboto-mono/roboto-mono-v5-latin-regular.woff) format("woff"), url(../fonts/roboto-mono/roboto-mono-v5-latin-regular.ttf) format("truetype");
}
@font-face {
  font-family: "Roboto Mono Web";
  font-style: normal;
  font-weight: 700;
  font-display: fallback;
  src: url(../fonts/roboto-mono/roboto-mono-v5-latin-700.woff2) format("woff2"), url(../fonts/roboto-mono/roboto-mono-v5-latin-700.woff) format("woff"), url(../fonts/roboto-mono/roboto-mono-v5-latin-700.ttf) format("truetype");
}
@font-face {
  font-family: "Roboto Mono Web";
  font-style: italic;
  font-weight: 300;
  font-display: fallback;
  src: url(../fonts/roboto-mono/roboto-mono-v5-latin-300italic.woff2) format("woff2"), url(../fonts/roboto-mono/roboto-mono-v5-latin-300italic.woff) format("woff"), url(../fonts/roboto-mono/roboto-mono-v5-latin-300italic.ttf) format("truetype");
}
@font-face {
  font-family: "Roboto Mono Web";
  font-style: italic;
  font-weight: 400;
  font-display: fallback;
  src: url(../fonts/roboto-mono/roboto-mono-v5-latin-italic.woff2) format("woff2"), url(../fonts/roboto-mono/roboto-mono-v5-latin-italic.woff) format("woff"), url(../fonts/roboto-mono/roboto-mono-v5-latin-italic.ttf) format("truetype");
}
@font-face {
  font-family: "Roboto Mono Web";
  font-style: italic;
  font-weight: 700;
  font-display: fallback;
  src: url(../fonts/roboto-mono/roboto-mono-v5-latin-700italic.woff2) format("woff2"), url(../fonts/roboto-mono/roboto-mono-v5-latin-700italic.woff) format("woff"), url(../fonts/roboto-mono/roboto-mono-v5-latin-700italic.ttf) format("truetype");
}
@font-face {
  font-family: "Source Sans Pro Web";
  font-style: normal;
  font-weight: 300;
  font-display: fallback;
  src: url(../fonts/source-sans-pro/sourcesanspro-light-webfont.woff2) format("woff2"), url(../fonts/source-sans-pro/sourcesanspro-light-webfont.woff) format("woff"), url(../fonts/source-sans-pro/sourcesanspro-light-webfont.ttf) format("truetype");
}
@font-face {
  font-family: "Source Sans Pro Web";
  font-style: normal;
  font-weight: 400;
  font-display: fallback;
  src: url(../fonts/source-sans-pro/sourcesanspro-regular-webfont.woff2) format("woff2"), url(../fonts/source-sans-pro/sourcesanspro-regular-webfont.woff) format("woff"), url(../fonts/source-sans-pro/sourcesanspro-regular-webfont.ttf) format("truetype");
}
@font-face {
  font-family: "Source Sans Pro Web";
  font-style: normal;
  font-weight: 700;
  font-display: fallback;
  src: url(../fonts/source-sans-pro/sourcesanspro-bold-webfont.woff2) format("woff2"), url(../fonts/source-sans-pro/sourcesanspro-bold-webfont.woff) format("woff"), url(../fonts/source-sans-pro/sourcesanspro-bold-webfont.ttf) format("truetype");
}
@font-face {
  font-family: "Source Sans Pro Web";
  font-style: italic;
  font-weight: 300;
  font-display: fallback;
  src: url(../fonts/source-sans-pro/sourcesanspro-lightitalic-webfont.woff2) format("woff2"), url(../fonts/source-sans-pro/sourcesanspro-lightitalic-webfont.woff) format("woff"), url(../fonts/source-sans-pro/sourcesanspro-lightitalic-webfont.ttf) format("truetype");
}
@font-face {
  font-family: "Source Sans Pro Web";
  font-style: italic;
  font-weight: 400;
  font-display: fallback;
  src: url(../fonts/source-sans-pro/sourcesanspro-italic-webfont.woff2) format("woff2"), url(../fonts/source-sans-pro/sourcesanspro-italic-webfont.woff) format("woff"), url(../fonts/source-sans-pro/sourcesanspro-italic-webfont.ttf) format("truetype");
}
@font-face {
  font-family: "Source Sans Pro Web";
  font-style: italic;
  font-weight: 700;
  font-display: fallback;
  src: url(../fonts/source-sans-pro/sourcesanspro-bolditalic-webfont.woff2) format("woff2"), url(../fonts/source-sans-pro/sourcesanspro-bolditalic-webfont.woff) format("woff"), url(../fonts/source-sans-pro/sourcesanspro-bolditalic-webfont.ttf) format("truetype");
}
@font-face {
  font-family: "Merriweather Web";
  font-style: normal;
  font-weight: 300;
  font-display: fallback;
  src: url(../fonts/merriweather/Latin-Merriweather-Light.woff2) format("woff2"), url(../fonts/merriweather/Latin-Merriweather-Light.woff) format("woff"), url(../fonts/merriweather/Latin-Merriweather-Light.ttf) format("truetype");
}
@font-face {
  font-family: "Merriweather Web";
  font-style: normal;
  font-weight: 400;
  font-display: fallback;
  src: url(../fonts/merriweather/Latin-Merriweather-Regular.woff2) format("woff2"), url(../fonts/merriweather/Latin-Merriweather-Regular.woff) format("woff"), url(../fonts/merriweather/Latin-Merriweather-Regular.ttf) format("truetype");
}
@font-face {
  font-family: "Merriweather Web";
  font-style: normal;
  font-weight: 700;
  font-display: fallback;
  src: url(../fonts/merriweather/Latin-Merriweather-Bold.woff2) format("woff2"), url(../fonts/merriweather/Latin-Merriweather-Bold.woff) format("woff"), url(../fonts/merriweather/Latin-Merriweather-Bold.ttf) format("truetype");
}
@font-face {
  font-family: "Merriweather Web";
  font-style: italic;
  font-weight: 300;
  font-display: fallback;
  src: url(../fonts/merriweather/Latin-Merriweather-LightItalic.woff2) format("woff2"), url(../fonts/merriweather/Latin-Merriweather-LightItalic.woff) format("woff"), url(../fonts/merriweather/Latin-Merriweather-LightItalic.ttf) format("truetype");
}
@font-face {
  font-family: "Merriweather Web";
  font-style: italic;
  font-weight: 400;
  font-display: fallback;
  src: url(../fonts/merriweather/Latin-Merriweather-Italic.woff2) format("woff2"), url(../fonts/merriweather/Latin-Merriweather-Italic.woff) format("woff"), url(../fonts/merriweather/Latin-Merriweather-Italic.ttf) format("truetype");
}
@font-face {
  font-family: "Merriweather Web";
  font-style: italic;
  font-weight: 700;
  font-display: fallback;
  src: url(../fonts/merriweather/Latin-Merriweather-BoldItalic.woff2) format("woff2"), url(../fonts/merriweather/Latin-Merriweather-BoldItalic.woff) format("woff"), url(../fonts/merriweather/Latin-Merriweather-BoldItalic.ttf) format("truetype");
}
/* stylelint-enable */
.usa-button {
  font-family: Source Sans Pro Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", "Helvetica Neue", Helvetica, Arial, sans;
  font-size: 1.06rem;
  line-height: 0.9;
  color: white;
  background-color: #005ea2;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: 0;
  border-radius: 0.25rem;
  cursor: pointer;
  display: inline-block;
  font-weight: 700;
  margin-right: 0.5rem;
  padding: 0.75rem 1.25rem;
  text-align: center;
  text-decoration: none;
  width: 100%;
}
@media all and (min-width: 30em) {
  .usa-button {
    width: auto;
  }
}
.usa-button:visited {
  color: white;
}
.usa-button:hover, .usa-button.usa-button--hover {
  color: white;
  background-color: #1a4480;
  border-bottom: 0;
  text-decoration: none;
}
.usa-button:active, .usa-button.usa-button--active {
  color: white;
  background-color: #162e51;
}
.usa-button:not([disabled]):focus, .usa-button:not([disabled]).usa-focus {
  outline-offset: 0.25rem;
}
.usa-button:disabled {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background-color: #c9c9c9;
  color: white;
}
.usa-button:disabled:hover, .usa-button:disabled.usa-button--hover, .usa-button:disabled:active, .usa-button:disabled.usa-button--active, .usa-button:disabled:focus, .usa-button:disabled.usa-focus {
  background-color: #c9c9c9;
  border: 0;
  -webkit-box-shadow: none;
          box-shadow: none;
}

.usa-button--accent-cool {
  color: #1b1b1b;
  background-color: #00bde3;
}
.usa-button--accent-cool:visited {
  color: #1b1b1b;
  background-color: #00bde3;
}
.usa-button--accent-cool:hover, .usa-button--accent-cool.usa-button--hover {
  color: #1b1b1b;
  background-color: #28a0cb;
}
.usa-button--accent-cool:active, .usa-button--accent-cool.usa-button--active {
  color: white;
  background-color: #07648d;
}

.usa-button--accent-warm {
  color: #1b1b1b;
  background-color: #fa9441;
}
.usa-button--accent-warm:visited {
  color: #1b1b1b;
  background-color: #fa9441;
}
.usa-button--accent-warm:hover, .usa-button--accent-warm.usa-button--hover {
  color: white;
  background-color: #c05600;
}
.usa-button--accent-warm:active, .usa-button--accent-warm.usa-button--active {
  color: white;
  background-color: #775540;
}

.usa-button--outline {
  background-color: transparent;
  -webkit-box-shadow: inset 0 0 0 2px #005ea2;
          box-shadow: inset 0 0 0 2px #005ea2;
  color: #005ea2;
}
.usa-button--outline:visited {
  color: #005ea2;
}
.usa-button--outline:hover, .usa-button--outline.usa-button--hover {
  background-color: transparent;
  -webkit-box-shadow: inset 0 0 0 2px #1a4480;
          box-shadow: inset 0 0 0 2px #1a4480;
  color: #1a4480;
}
.usa-button--outline:active, .usa-button--outline.usa-button--active {
  background-color: transparent;
  -webkit-box-shadow: inset 0 0 0 2px #162e51;
          box-shadow: inset 0 0 0 2px #162e51;
  color: #162e51;
}
.usa-button--outline.usa-button--inverse {
  -webkit-box-shadow: inset 0 0 0 2px #dfe1e2;
          box-shadow: inset 0 0 0 2px #dfe1e2;
  color: #dfe1e2;
}
.usa-button--outline.usa-button--inverse:visited {
  color: #dfe1e2;
}
.usa-button--outline.usa-button--inverse:hover, .usa-button--outline.usa-button--inverse.usa-button--hover {
  -webkit-box-shadow: inset 0 0 0 2px #f0f0f0;
          box-shadow: inset 0 0 0 2px #f0f0f0;
  color: #f0f0f0;
}
.usa-button--outline.usa-button--inverse:active, .usa-button--outline.usa-button--inverse.usa-button--active {
  background-color: transparent;
  -webkit-box-shadow: inset 0 0 0 2px white;
          box-shadow: inset 0 0 0 2px white;
  color: white;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled {
  -moz-osx-font-smoothing: inherit;
  -webkit-font-smoothing: inherit;
  color: #005ea2;
  text-decoration: underline;
  background-color: transparent;
  border: 0;
  border-radius: 0;
  -webkit-box-shadow: none;
          box-shadow: none;
  font-weight: normal;
  margin: 0;
  padding: 0;
  text-align: left;
  color: #dfe1e2;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled:visited {
  color: #54278f;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled:hover {
  color: #1a4480;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled:active {
  color: #162e51;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled:focus {
  outline: 0.25rem solid #2491ff;
  outline-offset: 0;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled:hover, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--hover, .usa-button--outline.usa-button--inverse.usa-button--unstyled:disabled:hover, .usa-button--outline.usa-button--inverse.usa-button--unstyled:disabled.usa-button--hover, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--disabled:hover, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--disabled.usa-button--hover, .usa-button--outline.usa-button--inverse.usa-button--unstyled:active, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--active, .usa-button--outline.usa-button--inverse.usa-button--unstyled:disabled:active, .usa-button--outline.usa-button--inverse.usa-button--unstyled:disabled.usa-button--active, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--disabled:active, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--disabled.usa-button--active, .usa-button--outline.usa-button--inverse.usa-button--unstyled:disabled:focus, .usa-button--outline.usa-button--inverse.usa-button--unstyled:disabled.usa-focus, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--disabled:focus, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--disabled.usa-focus, .usa-button--outline.usa-button--inverse.usa-button--unstyled:disabled, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--disabled {
  -moz-osx-font-smoothing: inherit;
  -webkit-font-smoothing: inherit;
  background-color: transparent;
  -webkit-box-shadow: none;
          box-shadow: none;
  text-decoration: underline;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled:disabled, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--disabled {
  color: #c9c9c9;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--hover {
  color: #1a4480;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--active {
  color: #162e51;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled:visited {
  color: #dfe1e2;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled:hover, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--hover {
  color: #f0f0f0;
}
.usa-button--outline.usa-button--inverse.usa-button--unstyled:active, .usa-button--outline.usa-button--inverse.usa-button--unstyled.usa-button--active {
  color: white;
}

.usa-button--base {
  color: white;
  background-color: #71767a;
}
.usa-button--base:hover, .usa-button--base.usa-button--hover {
  color: white;
  background-color: #565c65;
}
.usa-button--base:active, .usa-button--base.usa-button--active {
  color: white;
  background-color: #3d4551;
}

.usa-button--secondary {
  color: white;
  background-color: #d83933;
}
.usa-button--secondary:hover, .usa-button--secondary.usa-button--hover {
  color: white;
  background-color: #b50909;
}
.usa-button--secondary:active, .usa-button--secondary.usa-button--active {
  color: white;
  background-color: #8b0a03;
}

.usa-button--big {
  border-radius: 0.25rem;
  font-size: 1.46rem;
  padding: 1rem 1.5rem;
}

.usa-button--disabled {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background-color: #c9c9c9;
  color: white;
}
.usa-button--disabled:hover, .usa-button--disabled.usa-button--hover, .usa-button--disabled:active, .usa-button--disabled.usa-button--active, .usa-button--disabled:focus, .usa-button--disabled.usa-focus {
  background-color: #c9c9c9;
  border: 0;
  -webkit-box-shadow: none;
          box-shadow: none;
}

.usa-button--outline-disabled,
.usa-button--outline-inverse-disabled,
.usa-button--outline:disabled,
.usa-button--outline-inverse:disabled,
.usa-button--outline-inverse:disabled {
  background-color: transparent;
}
.usa-button--outline-disabled:hover, .usa-button--outline-disabled.usa-button--hover, .usa-button--outline-disabled:active, .usa-button--outline-disabled.usa-button--active, .usa-button--outline-disabled:focus, .usa-button--outline-disabled.usa-focus,
.usa-button--outline-inverse-disabled:hover,
.usa-button--outline-inverse-disabled.usa-button--hover,
.usa-button--outline-inverse-disabled:active,
.usa-button--outline-inverse-disabled.usa-button--active,
.usa-button--outline-inverse-disabled:focus,
.usa-button--outline-inverse-disabled.usa-focus,
.usa-button--outline:disabled:hover,
.usa-button--outline:disabled.usa-button--hover,
.usa-button--outline:disabled:active,
.usa-button--outline:disabled.usa-button--active,
.usa-button--outline:disabled:focus,
.usa-button--outline:disabled.usa-focus,
.usa-button--outline-inverse:disabled:hover,
.usa-button--outline-inverse:disabled.usa-button--hover,
.usa-button--outline-inverse:disabled:active,
.usa-button--outline-inverse:disabled.usa-button--active,
.usa-button--outline-inverse:disabled:focus,
.usa-button--outline-inverse:disabled.usa-focus,
.usa-button--outline-inverse:disabled:hover,
.usa-button--outline-inverse:disabled.usa-button--hover,
.usa-button--outline-inverse:disabled:active,
.usa-button--outline-inverse:disabled.usa-button--active,
.usa-button--outline-inverse:disabled:focus,
.usa-button--outline-inverse:disabled.usa-focus {
  background-color: transparent;
  border: 0;
}

.usa-button--outline-disabled,
.usa-button--outline:disabled {
  -webkit-box-shadow: inset 0 0 0 2px #c9c9c9;
          box-shadow: inset 0 0 0 2px #c9c9c9;
  color: #c9c9c9;
}
.usa-button--outline-disabled.usa-button--inverse,
.usa-button--outline:disabled.usa-button--inverse {
  background-color: transparent;
  -webkit-box-shadow: inset 0 0 0 2px #71767a;
          box-shadow: inset 0 0 0 2px #71767a;
  color: #71767a;
}

.usa-button--unstyled {
  -moz-osx-font-smoothing: inherit;
  -webkit-font-smoothing: inherit;
  color: #005ea2;
  text-decoration: underline;
  background-color: transparent;
  border: 0;
  border-radius: 0;
  -webkit-box-shadow: none;
          box-shadow: none;
  font-weight: normal;
  margin: 0;
  padding: 0;
  text-align: left;
}
.usa-button--unstyled:visited {
  color: #54278f;
}
.usa-button--unstyled:hover {
  color: #1a4480;
}
.usa-button--unstyled:active {
  color: #162e51;
}
.usa-button--unstyled:focus {
  outline: 0.25rem solid #2491ff;
  outline-offset: 0;
}
.usa-button--unstyled:hover, .usa-button--unstyled.usa-button--hover, .usa-button--unstyled:disabled:hover, .usa-button--unstyled:disabled.usa-button--hover, .usa-button--unstyled.usa-button--disabled:hover, .usa-button--unstyled.usa-button--disabled.usa-button--hover, .usa-button--unstyled:active, .usa-button--unstyled.usa-button--active, .usa-button--unstyled:disabled:active, .usa-button--unstyled:disabled.usa-button--active, .usa-button--unstyled.usa-button--disabled:active, .usa-button--unstyled.usa-button--disabled.usa-button--active, .usa-button--unstyled:disabled:focus, .usa-button--unstyled:disabled.usa-focus, .usa-button--unstyled.usa-button--disabled:focus, .usa-button--unstyled.usa-button--disabled.usa-focus, .usa-button--unstyled:disabled, .usa-button--unstyled.usa-button--disabled {
  -moz-osx-font-smoothing: inherit;
  -webkit-font-smoothing: inherit;
  background-color: transparent;
  -webkit-box-shadow: none;
          box-shadow: none;
  text-decoration: underline;
}
.usa-button--unstyled:disabled, .usa-button--unstyled.usa-button--disabled {
  color: #c9c9c9;
}
.usa-button--unstyled.usa-button--hover {
  color: #1a4480;
}
.usa-button--unstyled.usa-button--active {
  color: #162e51;
}

* {
  -webkit-transition-duration: 200ms;
          transition-duration: 200ms;
  -webkit-transition-property: background-color, border-color, color, opacity, text-shadow, -webkit-box-shadow, -webkit-transform;
  transition-property: background-color, border-color, color, opacity, text-shadow, -webkit-box-shadow, -webkit-transform;
  transition-property: background-color, border-color, box-shadow, color, opacity, text-shadow, transform;
  transition-property: background-color, border-color, box-shadow, color, opacity, text-shadow, transform, -webkit-box-shadow, -webkit-transform;
  -webkit-transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
          transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

@media print {
  * {
    background-color: transparent !important;
    -webkit-box-shadow: none !important;
            box-shadow: none !important;
    color: #000 !important;
    text-shadow: none !important;
  }

  @page {
    margin: 2cm;
  }
}
[id] {
  scroll-margin-top: 1em;
}

html {
  -webkit-font-feature-settings: "kern" 1;
          font-feature-settings: "kern" 1;
  -webkit-font-kerning: normal;
          font-kerning: normal;
  font-size: 100%;
  min-height: 100%;
}

body {
  font-family: Source Sans Pro Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", "Helvetica Neue", Helvetica, Arial, sans;
  font-size: 1.06rem;
  line-height: 1.5;
  background-color: #fff;
  color: #1b1b1b;
  margin: 0;
  padding: 0;
  word-wrap: break-word;
}
body.has-open-mobile-menu {
  overflow: hidden;
  -webkit-overflow-scrolling: touch;
}

@media print {
  nav {
    display: none;
  }
}

summary {
  display: list-item;
}

iframe {
  border: 0;
  max-width: 100%;
}
@media print {
  iframe {
    display: none;
  }
}

h6,
.h6, h5,
.h5, h4,
.h4, h3,
.h3,
.box--special > .box__title,
div.box__title,
.box--rss > .box__title,
.box--related-info > .box__title,
.box--news > .box__title,
.box--multipurpose > .box__title,
.box--highlight > .box__title,
.box--blog > .box__title,
.box--alert > .box__title, h2,
.h2, h1 {
  margin-bottom: 0;
  margin-top: 0;
  clear: none;
  margin-bottom: 1rem;
  clear: none;
  -webkit-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  text-rendering: optimizeLegibility;
}
* + h6,
* + .h6, * + h5,
* + .h5, * + h4,
* + .h4, * + h3,
* + .h3,
.box--special > * + .box__title,
* + div.box__title,
.box--rss > * + .box__title,
.box--related-info > * + .box__title,
.box--news > * + .box__title,
.box--multipurpose > * + .box__title,
.box--highlight > * + .box__title,
.box--blog > * + .box__title,
.box--alert > * + .box__title, * + h2,
* + .h2, * + h1 {
  margin-top: 1em;
}
@media print {
  h6,
.h6, h5,
.h5, h4,
.h4, h3,
.h3,
.box--special > .box__title,
div.box__title,
.box--rss > .box__title,
.box--related-info > .box__title,
.box--news > .box__title,
.box--multipurpose > .box__title,
.box--highlight > .box__title,
.box--blog > .box__title,
.box--alert > .box__title, h2,
.h2, h1 {
    orphans: 3;
    page-break-after: avoid;
    widows: 3;
  }
  h6::after,
.h6::after, h5::after,
.h5::after, h4::after,
.h4::after, h3::after,
.h3::after,
.box--special > .box__title::after,
div.box__title::after,
.box--rss > .box__title::after,
.box--related-info > .box__title::after,
.box--news > .box__title::after,
.box--multipurpose > .box__title::after,
.box--highlight > .box__title::after,
.box--blog > .box__title::after,
.box--alert > .box__title::after, h2::after,
.h2::after, h1::after {
    display: inline-block;
  }
}

h1 {
  font-family: Merriweather Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", Georgia, Cambria, "Times New Roman", Times, serif;
  font-size: 2.44rem;
  font-weight: 700;
  line-height: 1.2;
}
@media (min-width: max-width 40rem) {
  h1 {
    font-size: 1.95rem;
  }
}

h2,
.h2 {
  font-family: Merriweather Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", Georgia, Cambria, "Times New Roman", Times, serif;
  font-size: 1.95rem;
  font-weight: 700;
  line-height: 1.2;
}
@media (min-width: max-width 40rem) {
  h2,
.h2 {
    font-size: 1.34rem;
  }
}

h3,
.h3,
.box--special > .box__title,
div.box__title,
.box--rss > .box__title,
.box--related-info > .box__title,
.box--news > .box__title,
.box--multipurpose > .box__title,
.box--highlight > .box__title,
.box--blog > .box__title,
.box--alert > .box__title {
  font-family: Merriweather Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", Georgia, Cambria, "Times New Roman", Times, serif;
  font-size: 1.34rem;
  font-weight: 700;
  line-height: 1.2;
}
@media (min-width: max-width 40rem) {
  h3,
.h3,
.box--special > .box__title,
div.box__title,
.box--rss > .box__title,
.box--related-info > .box__title,
.box--news > .box__title,
.box--multipurpose > .box__title,
.box--highlight > .box__title,
.box--blog > .box__title,
.box--alert > .box__title {
    font-size: 1.1rem;
  }
}

h4,
.h4 {
  font-family: Merriweather Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", Georgia, Cambria, "Times New Roman", Times, serif;
  font-size: 0.98rem;
  font-weight: 700;
  line-height: 1.2;
}

h5,
.h5 {
  font-family: Merriweather Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", Georgia, Cambria, "Times New Roman", Times, serif;
  font-size: 0.91rem;
  font-weight: 700;
  line-height: 1.2;
}

h6,
.h6 {
  font-family: Source Sans Pro Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", "Helvetica Neue", Helvetica, Arial, sans;
  font-size: 0.87rem;
  font-weight: normal;
  letter-spacing: 0.025em;
  line-height: 1.1;
  text-transform: uppercase;
}

p {
  line-height: 1.5;
  margin-bottom: 1rem;
  margin-top: 0;
}
@media print {
  p {
    orphans: 3;
    widows: 3;
  }
}
p:empty {
  margin: 0 !important;
}

a {
  background-color: transparent;
  color: #005ea2;
  -webkit-text-decoration-skip: objects;
}
a:visited {
  color: #54278f;
}
a:hover, a:focus {
  color: #1a4480;
}
a:active {
  color: #162e51;
}
@media print {
  a, a:visited {
    text-decoration: none;
  }
  a[href]::after {
    content: " <" attr(href) ">";
    font-family: Source Sans Pro Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", "Helvetica Neue", Helvetica, Arial, sans;
    font-size: 10pt;
    font-weight: normal;
    text-transform: lowercase;
  }
  a[href^="/"]::after {
    content: " <https://epa.gov" attr(href) ">";
  }
  a[href^="javascript:"]::after, a[href^="mailto:"]::after, a[href^="tel:"]::after, a[href^="#"]::after, a[href*="?"]::after {
    content: "";
  }
}

abbr[title] {
  border-bottom: 1px dotted;
  text-decoration: none;
}
@media (min-width: max-width 40rem) {
  abbr[title] {
    border-bottom: 0;
  }
  abbr[title]::after {
    content: " (" attr(title) ")";
  }
}
abbr:hover {
  cursor: help;
}
@media print {
  abbr[title] {
    border-bottom: 0;
  }
  abbr[title]::after {
    content: " (" attr(title) ")";
  }
}

cite {
  color: #565c65;
  font-family: Source Sans Pro Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", "Helvetica Neue", Helvetica, Arial, sans;
  font-size: 0.93rem;
  font-style: normal;
  font-weight: normal;
  letter-spacing: 0.025em;
  line-height: 1.6;
}

dfn {
  font-style: normal;
}

ins {
  text-decoration: none;
}

mark {
  background: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

var {
  font-style: normal;
}

blockquote {
  font-family: Merriweather Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", Georgia, Cambria, "Times New Roman", Times, serif;
  font-size: 1.1rem;
  font-weight: normal;
  line-height: 1.7;
  background-color: #fff;
  border-left: 0.5rem solid #00bde3;
  clear: both;
  margin: 0 0 1.5rem;
  padding: 1.25rem 0 1.25rem 1.25rem;
}
blockquote > :last-child {
  margin-bottom: 0;
}
* + blockquote {
  margin-top: 1.5rem;
}

blockquote cite {
  display: block;
  margin: 1rem 0;
  text-align: left;
}

blockquote p {
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
}
blockquote cite em {
  border-left: 1px solid #71767a;
  font-weight: normal;
  margin-left: 0.25rem;
  padding-left: 0.5rem;
}
@media print {
  blockquote {
    page-break-inside: avoid;
  }
}

pre {
  margin: 0 0 1rem;
  overflow: auto;
}
* + pre {
  margin-top: 1rem;
}
@media print {
  pre {
    page-break-inside: avoid;
  }
}

hr {
  border-top: solid #a9aeb1;
  border-width: 1px 0 0;
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0;
  margin: 0 0 1.5rem;
  overflow: auto;
}
* + hr {
  margin-top: 1.5rem;
}

address {
  font-style: normal;
}

ul {
  list-style-type: disc;
  margin-top: 0;
}
[dir=rtl] ul {
  padding-left: 0;
  padding-right: 3ch;
}
ul:last-child {
  margin-bottom: revert;
}
ul ol,
ul ul {
  margin-top: 0.5rem;
}
ul ul {
  list-style-type: circle;
}
ul ul ul {
  list-style-type: square;
}

ol {
  margin-top: 0;
}
[dir=rtl] ol {
  padding-left: 0;
  padding-right: 3ch;
}
ol:last-child {
  margin-bottom: revert;
}
ol ol,
ol ul {
  margin-top: 0.5rem;
}
ol ol {
  list-style-type: lower-alpha;
}
ol ol ol {
  list-style-type: lower-roman;
}

li {
  max-width: unset;
}
@media print {
  li {
    page-break-inside: avoid;
  }
}

dd {
  margin: 0 0 1rem 3ch;
}
[dir=rtl] dd {
  margin-left: 0;
  margin-right: 3ch;
}

dl {
  margin: 0 0 1rem;
}

table {
  font-family: Source Sans Pro Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", "Helvetica Neue", Helvetica, Arial, sans;
  font-size: 1.06rem;
  line-height: 1.5;
  border-collapse: collapse;
  border-spacing: 0;
  color: #1b1b1b;
  margin: 1.25rem 0;
  text-align: left;
  /* stylelint-disable selector-class-pattern */
  /* stylelint-enable selector-class-pattern */
}
table thead th {
  background-clip: padding-box;
  color: #1b1b1b;
  font-weight: 700;
  line-height: 1.3;
}
table thead th,
table thead td {
  background-color: #dfe1e2;
  color: #1b1b1b;
}
table tbody th {
  text-align: left;
}
table th,
table td {
  background-color: white;
  border: 1px solid #1b1b1b;
  font-weight: normal;
  padding: 0.5rem 1rem;
}
table caption {
  font-family: Source Sans Pro Web, "Noto Sans Arabic", "Noto Sans BN homepage", "Noto Sans GU homepage", "Noto Sans KR homepage", "Noto Sans SC homepage", "Noto Sans BN", "Noto Sans GU", "Noto Sans KR", "Noto Sans SC", "Noto Sans TC", "Helvetica Neue", Helvetica, Arial, sans;
  font-size: 1rem;
  font-weight: 700;
  margin-bottom: 0.75rem;
  text-align: left;
}
table th[data-sortable] {
  padding-right: 2.5rem;
  position: relative;
}
table th[data-sortable]::after {
  border-bottom-color: transparent;
  border-bottom-style: solid;
  border-bottom-width: 1px;
  bottom: 0;
  content: "";
  height: 0;
  left: 0;
  position: absolute;
  width: 100%;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button, table th[data-sortable][aria-sort=none] .usa-table__header__button {
  -moz-osx-font-smoothing: inherit;
  -webkit-font-smoothing: inherit;
  color: #005ea2;
  text-decoration: underline;
  background-color: transparent;
  border: 0;
  border-radius: 0;
  -webkit-box-shadow: none;
          box-shadow: none;
  font-weight: normal;
  margin: 0;
  padding: 0;
  text-align: left;
  height: 2rem;
  width: 2rem;
  background-position: center center;
  background-size: 1.5rem;
  color: #71767a;
  cursor: pointer;
  display: inline-block;
  margin: 0;
  position: absolute;
  right: 0.25rem;
  text-align: center;
  text-decoration: none;
  top: 50%;
  -webkit-transform: translate(0, -50%);
          transform: translate(0, -50%);
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button:visited, table th[data-sortable][aria-sort=none] .usa-table__header__button:visited {
  color: #54278f;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button:hover, table th[data-sortable][aria-sort=none] .usa-table__header__button:hover {
  color: #1a4480;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button:active, table th[data-sortable][aria-sort=none] .usa-table__header__button:active {
  color: #162e51;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button:focus, table th[data-sortable][aria-sort=none] .usa-table__header__button:focus {
  outline: 0.25rem solid #2491ff;
  outline-offset: 0;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button:hover, table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--hover, table th[data-sortable]:not([aria-sort]) .usa-table__header__button:disabled:hover, table th[data-sortable]:not([aria-sort]) .usa-table__header__button:disabled.usa-button--hover, table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--disabled:hover, table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--disabled.usa-button--hover, table th[data-sortable]:not([aria-sort]) .usa-table__header__button:active, table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--active, table th[data-sortable]:not([aria-sort]) .usa-table__header__button:disabled:active, table th[data-sortable]:not([aria-sort]) .usa-table__header__button:disabled.usa-button--active, table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--disabled:active, table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--disabled.usa-button--active, table th[data-sortable]:not([aria-sort]) .usa-table__header__button:disabled:focus, table th[data-sortable]:not([aria-sort]) .usa-table__header__button:disabled.usa-focus, table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--disabled:focus, table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--disabled.usa-focus, table th[data-sortable]:not([aria-sort]) .usa-table__header__button:disabled, table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--disabled, table th[data-sortable][aria-sort=none] .usa-table__header__button:hover, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--hover, table th[data-sortable][aria-sort=none] .usa-table__header__button:disabled:hover, table th[data-sortable][aria-sort=none] .usa-table__header__button:disabled.usa-button--hover, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--disabled:hover, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--disabled.usa-button--hover, table th[data-sortable][aria-sort=none] .usa-table__header__button:active, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--active, table th[data-sortable][aria-sort=none] .usa-table__header__button:disabled:active, table th[data-sortable][aria-sort=none] .usa-table__header__button:disabled.usa-button--active, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--disabled:active, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--disabled.usa-button--active, table th[data-sortable][aria-sort=none] .usa-table__header__button:disabled:focus, table th[data-sortable][aria-sort=none] .usa-table__header__button:disabled.usa-focus, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--disabled:focus, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--disabled.usa-focus, table th[data-sortable][aria-sort=none] .usa-table__header__button:disabled, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--disabled {
  -moz-osx-font-smoothing: inherit;
  -webkit-font-smoothing: inherit;
  background-color: transparent;
  -webkit-box-shadow: none;
          box-shadow: none;
  text-decoration: underline;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button:disabled, table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--disabled, table th[data-sortable][aria-sort=none] .usa-table__header__button:disabled, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--disabled {
  color: #c9c9c9;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--hover, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--hover {
  color: #1a4480;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button.usa-button--active, table th[data-sortable][aria-sort=none] .usa-table__header__button.usa-button--active {
  color: #162e51;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button .usa-icon, table th[data-sortable][aria-sort=none] .usa-table__header__button .usa-icon {
  height: 1.5rem;
  width: 1.5rem;
  vertical-align: middle;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button .usa-icon > g, table th[data-sortable][aria-sort=none] .usa-table__header__button .usa-icon > g {
  fill: transparent;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button .usa-icon > g.unsorted, table th[data-sortable][aria-sort=none] .usa-table__header__button .usa-icon > g.unsorted {
  fill: #1b1b1b;
}
table th[data-sortable]:not([aria-sort]) .usa-table__header__button:hover .usa-icon > g.unsorted, table th[data-sortable][aria-sort=none] .usa-table__header__button:hover .usa-icon > g.unsorted {
  fill: black;
}
table th[data-sortable][aria-sort=descending], table th[data-sortable][aria-sort=ascending] {
  background-color: #97d4ea;
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button {
  -moz-osx-font-smoothing: inherit;
  -webkit-font-smoothing: inherit;
  color: #005ea2;
  text-decoration: underline;
  background-color: transparent;
  border: 0;
  border-radius: 0;
  -webkit-box-shadow: none;
          box-shadow: none;
  font-weight: normal;
  margin: 0;
  padding: 0;
  text-align: left;
  height: 2rem;
  width: 2rem;
  background-position: center center;
  background-size: 1.5rem;
  color: #71767a;
  cursor: pointer;
  display: inline-block;
  margin: 0;
  position: absolute;
  right: 0.25rem;
  text-align: center;
  text-decoration: none;
  top: 50%;
  -webkit-transform: translate(0, -50%);
          transform: translate(0, -50%);
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button:visited {
  color: #54278f;
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button:hover {
  color: #1a4480;
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button:active {
  color: #162e51;
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button:focus {
  outline: 0.25rem solid #2491ff;
  outline-offset: 0;
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button:hover, table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--hover, table th[data-sortable][aria-sort=descending] .usa-table__header__button:disabled:hover, table th[data-sortable][aria-sort=descending] .usa-table__header__button:disabled.usa-button--hover, table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--disabled:hover, table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--disabled.usa-button--hover, table th[data-sortable][aria-sort=descending] .usa-table__header__button:active, table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--active, table th[data-sortable][aria-sort=descending] .usa-table__header__button:disabled:active, table th[data-sortable][aria-sort=descending] .usa-table__header__button:disabled.usa-button--active, table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--disabled:active, table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--disabled.usa-button--active, table th[data-sortable][aria-sort=descending] .usa-table__header__button:disabled:focus, table th[data-sortable][aria-sort=descending] .usa-table__header__button:disabled.usa-focus, table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--disabled:focus, table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--disabled.usa-focus, table th[data-sortable][aria-sort=descending] .usa-table__header__button:disabled, table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--disabled {
  -moz-osx-font-smoothing: inherit;
  -webkit-font-smoothing: inherit;
  background-color: transparent;
  -webkit-box-shadow: none;
          box-shadow: none;
  text-decoration: underline;
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button:disabled, table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--disabled {
  color: #c9c9c9;
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--hover {
  color: #1a4480;
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button.usa-button--active {
  color: #162e51;
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button .usa-icon {
  height: 1.5rem;
  width: 1.5rem;
  vertical-align: middle;
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button .usa-icon > g {
  fill: transparent;
}
table th[data-sortable][aria-sort=descending] .usa-table__header__button .usa-icon > g.descending {
  fill: #1b1b1b;
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button {
  -moz-osx-font-smoothing: inherit;
  -webkit-font-smoothing: inherit;
  color: #005ea2;
  text-decoration: underline;
  background-color: transparent;
  border: 0;
  border-radius: 0;
  -webkit-box-shadow: none;
          box-shadow: none;
  font-weight: normal;
  margin: 0;
  padding: 0;
  text-align: left;
  height: 2rem;
  width: 2rem;
  background-position: center center;
  background-size: 1.5rem;
  color: #71767a;
  cursor: pointer;
  display: inline-block;
  margin: 0;
  position: absolute;
  right: 0.25rem;
  text-align: center;
  text-decoration: none;
  top: 50%;
  -webkit-transform: translate(0, -50%);
          transform: translate(0, -50%);
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button:visited {
  color: #54278f;
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button:hover {
  color: #1a4480;
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button:active {
  color: #162e51;
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button:focus {
  outline: 0.25rem solid #2491ff;
  outline-offset: 0;
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button:hover, table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--hover, table th[data-sortable][aria-sort=ascending] .usa-table__header__button:disabled:hover, table th[data-sortable][aria-sort=ascending] .usa-table__header__button:disabled.usa-button--hover, table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--disabled:hover, table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--disabled.usa-button--hover, table th[data-sortable][aria-sort=ascending] .usa-table__header__button:active, table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--active, table th[data-sortable][aria-sort=ascending] .usa-table__header__button:disabled:active, table th[data-sortable][aria-sort=ascending] .usa-table__header__button:disabled.usa-button--active, table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--disabled:active, table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--disabled.usa-button--active, table th[data-sortable][aria-sort=ascending] .usa-table__header__button:disabled:focus, table th[data-sortable][aria-sort=ascending] .usa-table__header__button:disabled.usa-focus, table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--disabled:focus, table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--disabled.usa-focus, table th[data-sortable][aria-sort=ascending] .usa-table__header__button:disabled, table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--disabled {
  -moz-osx-font-smoothing: inherit;
  -webkit-font-smoothing: inherit;
  background-color: transparent;
  -webkit-box-shadow: none;
          box-shadow: none;
  text-decoration: underline;
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button:disabled, table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--disabled {
  color: #c9c9c9;
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--hover {
  color: #1a4480;
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button.usa-button--active {
  color: #162e51;
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button .usa-icon {
  height: 1.5rem;
  width: 1.5rem;
  vertical-align: middle;
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button .usa-icon > g {
  fill: transparent;
}
table th[data-sortable][aria-sort=ascending] .usa-table__header__button .usa-icon > g.ascending {
  fill: #1b1b1b;
}
table thead th[aria-sort] {
  background-color: #97d4ea;
  color: #1b1b1b;
}
table td[data-sort-active],
table th[data-sort-active] {
  background-color: #e1f3f8;
  color: #1b1b1b;
}

@media print {
  thead {
    display: table-header-group;
  }
}

tbody th {
  background-color: #f0f0f0;
  font-weight: 700;
}

@media print {
  tr {
    page-break-inside: avoid;
  }
}

button {
  overflow: visible;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

input {
  line-height: normal;
}

legend {
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  color: inherit;
  display: table;
  margin: 0;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

optgroup {
  font-weight: 700;
}

textarea {
  overflow: auto;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

canvas {
  display: inline-block;
}

figure {
  margin: 0;
}

img {
  border: 0;
  font-style: italic;
  height: auto;
  max-width: 100%;
  vertical-align: middle;
}
@media print {
  img {
    max-width: 100% !important;
    page-break-inside: avoid;
  }
}

svg:not(:root) {
  overflow: hidden;
}

.box__image-link::after, .external-link--image::after, .box__image-link:where([href^="http://"], [href^="https://"], [href^="//"]):not([href$="//www.epa.gov"], [href$="//epa.gov"], [href^="http://www.epa.gov/"], [href^="https://www.epa.gov/"], [href^="http://epa.gov/"], [href^="https://epa.gov/"], [href^="//epa.gov/"], [href^="//www.epa.gov/"], [href$="//work.epa.gov"], [href^="http://work.epa.gov"], [href^="https://work.epa.gov"], [href$="//intranet.epa.gov"], [href^="http://intranet.epa.gov"], [href^="https://intranet.epa.gov"], [href$="//usepa.sharepoint.com"], [href^="http://usepa.sharepoint.com"], [href^="https://usepa.sharepoint.com"])::after {
  background-color: rgba(255, 255, 255, 0.825);
  background-position: center;
  background-size: 0.75rem;
  margin: 0 !important;
  padding: 0.75rem;
  position: absolute;
  right: 0.25rem;
  top: 0.25rem;
}

.external-link--image, .box__image-link:where([href^="http://"], [href^="https://"], [href^="//"]):not([href$="//www.epa.gov"], [href$="//epa.gov"], [href^="http://www.epa.gov/"], [href^="https://www.epa.gov/"], [href^="http://epa.gov/"], [href^="https://epa.gov/"], [href^="//epa.gov/"], [href^="//www.epa.gov/"], [href$="//work.epa.gov"], [href^="http://work.epa.gov"], [href^="https://work.epa.gov"], [href$="//intranet.epa.gov"], [href^="http://intranet.epa.gov"], [href^="https://intranet.epa.gov"], [href$="//usepa.sharepoint.com"], [href^="http://usepa.sharepoint.com"], [href^="https://usepa.sharepoint.com"]) {
  display: inline-block;
  position: relative;
}
.external-link--image .icon--exit, .box__image-link:where([href^="http://"], [href^="https://"], [href^="//"]):not([href$="//www.epa.gov"], [href$="//epa.gov"], [href^="http://www.epa.gov/"], [href^="https://www.epa.gov/"], [href^="http://epa.gov/"], [href^="https://epa.gov/"], [href^="//epa.gov/"], [href^="//www.epa.gov/"], [href$="//work.epa.gov"], [href^="http://work.epa.gov"], [href^="https://work.epa.gov"], [href$="//intranet.epa.gov"], [href^="http://intranet.epa.gov"], [href^="https://intranet.epa.gov"], [href$="//usepa.sharepoint.com"], [href^="http://usepa.sharepoint.com"], [href^="https://usepa.sharepoint.com"]) .icon--exit {
  margin: 0 !important;
  position: absolute;
  right: 0.25rem;
  top: 0.25rem;
}

.box {
  margin-bottom: 1.5rem;
  max-width: 100%;
  overflow: auto;
}
@media (min-width: 40em) {
  .box.u-align-left, .box.u-align-right {
    width: 33%;
  }
}
* + .box {
  margin-top: 1rem;
}
.box.has-image-header {
  max-width: 20rem;
}

/* stylelint-disable-next-line selector-no-qualifying-type */
.box--rss > .box__title, .box--related-info > .box__title, .box--news > .box__title, .box--multipurpose > .box__title, .box--highlight > .box__title, .box--blog > .box__title, .box--alert > .box__title,
.box--rss > .box__image-link > .box__image,
.box--related-info > .box__image-link > .box__image,
.box--news > .box__image-link > .box__image,
.box--multipurpose > .box__image-link > .box__image,
.box--highlight > .box__image-link > .box__image,
.box--blog > .box__image-link > .box__image,
.box--alert > .box__image-link > .box__image,
.box--rss > .box__image,
.box--related-info > .box__image,
.box--news > .box__image,
.box--multipurpose > .box__image,
.box--highlight > .box__image,
.box--blog > .box__image,
.box--alert > .box__image,
.box--rss > .box__content,
.box--related-info > .box__content,
.box--news > .box__content,
.box--multipurpose > .box__content,
.box--highlight > .box__content,
.box--blog > .box__content,
.box--alert > .box__content,
.box--rss > .box__footer,
.box--related-info > .box__footer,
.box--news > .box__footer,
.box--multipurpose > .box__footer,
.box--highlight > .box__footer,
.box--blog > .box__footer,
.box--alert > .box__footer {
  border: 1px solid #565c65;
}
.box--rss > .box__title, .box--related-info > .box__title, .box--news > .box__title, .box--multipurpose > .box__title, .box--highlight > .box__title, .box--blog > .box__title, .box--alert > .box__title,
.box--rss > .box__title > .box__title-link,
.box--related-info > .box__title > .box__title-link,
.box--news > .box__title > .box__title-link,
.box--multipurpose > .box__title > .box__title-link,
.box--highlight > .box__title > .box__title-link,
.box--blog > .box__title > .box__title-link,
.box--alert > .box__title > .box__title-link,
.box--rss > .box__content,
.box--related-info > .box__content,
.box--news > .box__content,
.box--multipurpose > .box__content,
.box--highlight > .box__content,
.box--blog > .box__content,
.box--alert > .box__content,
.box--rss > .box__footer,
.box--related-info > .box__footer,
.box--news > .box__footer,
.box--multipurpose > .box__footer,
.box--highlight > .box__footer,
.box--blog > .box__footer,
.box--alert > .box__footer {
  padding: 1.25rem;
}
.box--rss > .box__title > .box__title-link, .box--related-info > .box__title > .box__title-link, .box--news > .box__title > .box__title-link, .box--multipurpose > .box__title > .box__title-link, .box--highlight > .box__title > .box__title-link, .box--blog > .box__title > .box__title-link, .box--alert > .box__title > .box__title-link {
  display: block;
  margin: -1.25rem;
}
.box--rss > .box__title > .box__title-link::after, .box--related-info > .box__title > .box__title-link::after, .box--news > .box__title > .box__title-link::after, .box--multipurpose > .box__title > .box__title-link::after, .box--highlight > .box__title > .box__title-link::after, .box--blog > .box__title > .box__title-link::after, .box--alert > .box__title > .box__title-link::after {
  background-image: url("../images/external-link--white.svg") !important;
}
.box--rss > .box__title, .box--related-info > .box__title, .box--news > .box__title, .box--multipurpose > .box__title, .box--highlight > .box__title, .box--blog > .box__title, .box--alert > .box__title,
.box--rss > .box__footer,
.box--related-info > .box__footer,
.box--news > .box__footer,
.box--multipurpose > .box__footer,
.box--highlight > .box__footer,
.box--blog > .box__footer,
.box--alert > .box__footer {
  background-color: #565c65;
  color: #fff;
}
.box--rss > .box__title > .box__title-link, .box--related-info > .box__title > .box__title-link, .box--news > .box__title > .box__title-link, .box--multipurpose > .box__title > .box__title-link, .box--highlight > .box__title > .box__title-link, .box--blog > .box__title > .box__title-link, .box--alert > .box__title > .box__title-link {
  color: #fff;
}
.box--rss > .box__title, .box--related-info > .box__title, .box--news > .box__title, .box--multipurpose > .box__title, .box--highlight > .box__title, .box--blog > .box__title, .box--alert > .box__title {
  margin-bottom: 0;
  text-align: center;
}
.box--rss > .box__image, .box--related-info > .box__image, .box--news > .box__image, .box--multipurpose > .box__image, .box--highlight > .box__image, .box--blog > .box__image, .box--alert > .box__image,
.box--rss > .box__image-link > .box__image,
.box--related-info > .box__image-link > .box__image,
.box--news > .box__image-link > .box__image,
.box--multipurpose > .box__image-link > .box__image,
.box--highlight > .box__image-link > .box__image,
.box--blog > .box__image-link > .box__image,
.box--alert > .box__image-link > .box__image {
  border-bottom: 0;
  margin: 0;
}
.box--rss > .box__image + .box__content, .box--related-info > .box__image + .box__content, .box--news > .box__image + .box__content, .box--multipurpose > .box__image + .box__content, .box--highlight > .box__image + .box__content, .box--blog > .box__image + .box__content, .box--alert > .box__image + .box__content,
.box--rss > .box__image-link + .box__content,
.box--related-info > .box__image-link + .box__content,
.box--news > .box__image-link + .box__content,
.box--multipurpose > .box__image-link + .box__content,
.box--highlight > .box__image-link + .box__content,
.box--blog > .box__image-link + .box__content,
.box--alert > .box__image-link + .box__content {
  border-top: 0;
}
.box--rss > .box__content, .box--related-info > .box__content, .box--news > .box__content, .box--multipurpose > .box__content, .box--highlight > .box__content, .box--blog > .box__content, .box--alert > .box__content {
  border-bottom-width: 0.25rem;
  margin: 0;
}
.box--rss > .box__content > :last-child, .box--related-info > .box__content > :last-child, .box--news > .box__content > :last-child, .box--multipurpose > .box__content > :last-child, .box--highlight > .box__content > :last-child, .box--blog > .box__content > :last-child, .box--alert > .box__content > :last-child {
  margin-bottom: 0;
}
.box--rss > .box__footer, .box--related-info > .box__footer, .box--news > .box__footer, .box--multipurpose > .box__footer, .box--highlight > .box__footer, .box--blog > .box__footer, .box--alert > .box__footer {
  padding-top: 0.75rem;
  text-align: right;
}
.box--rss > .box__footer > .box__footer-link, .box--related-info > .box__footer > .box__footer-link, .box--news > .box__footer > .box__footer-link, .box--multipurpose > .box__footer > .box__footer-link, .box--highlight > .box__footer > .box__footer-link, .box--blog > .box__footer > .box__footer-link, .box--alert > .box__footer > .box__footer-link {
  color: #fff;
  text-decoration: none;
}
.box--rss > .box__footer > .box__footer-link:visited, .box--related-info > .box__footer > .box__footer-link:visited, .box--news > .box__footer > .box__footer-link:visited, .box--multipurpose > .box__footer > .box__footer-link:visited, .box--highlight > .box__footer > .box__footer-link:visited, .box--blog > .box__footer > .box__footer-link:visited, .box--alert > .box__footer > .box__footer-link:visited, .box--rss > .box__footer > .box__footer-link:hover, .box--related-info > .box__footer > .box__footer-link:hover, .box--news > .box__footer > .box__footer-link:hover, .box--multipurpose > .box__footer > .box__footer-link:hover, .box--highlight > .box__footer > .box__footer-link:hover, .box--blog > .box__footer > .box__footer-link:hover, .box--alert > .box__footer > .box__footer-link:hover, .box--rss > .box__footer > .box__footer-link:focus, .box--related-info > .box__footer > .box__footer-link:focus, .box--news > .box__footer > .box__footer-link:focus, .box--multipurpose > .box__footer > .box__footer-link:focus, .box--highlight > .box__footer > .box__footer-link:focus, .box--blog > .box__footer > .box__footer-link:focus, .box--alert > .box__footer > .box__footer-link:focus, .box--rss > .box__footer > .box__footer-link:active, .box--related-info > .box__footer > .box__footer-link:active, .box--news > .box__footer > .box__footer-link:active, .box--multipurpose > .box__footer > .box__footer-link:active, .box--highlight > .box__footer > .box__footer-link:active, .box--blog > .box__footer > .box__footer-link:active, .box--alert > .box__footer > .box__footer-link:active {
  color: #fff;
  text-decoration: underline;
}

.box--alert > .box__title,
.box--alert > .box__footer {
  background-color: #d54309;
  border-color: #d54309;
  color: #fff;
}
.box--alert > .box__title > .box__title-link {
  color: #fff;
}
.box--alert > .box__title > .box__title-link::after {
  background-image: url("../images/external-link--white.svg") !important;
}
.box--alert > .box__image,
.box--alert > .box__image-link > .box__image {
  border-color: #d54309;
}
.box--alert > .box__content {
  border-color: #d54309;
}

.box--blog > .box__title,
.box--blog > .box__footer {
  background-color: #dbebde;
  border-color: #dbebde;
  color: #1b1b1b;
}
.box--blog > .box__title > .box__title-link {
  color: #1b1b1b;
}
.box--blog > .box__title > .box__title-link::after {
  background-image: url("../images/external-link--gray-7.svg") !important;
}
.box--blog > .box__image,
.box--blog > .box__image-link > .box__image {
  border-color: #dbebde;
}
.box--blog > .box__content {
  border-color: #dbebde;
}
.box--blog > .box__footer > .box__footer-link {
  color: #1b1b1b;
}
.box--blog > .box__footer > .box__footer-link:visited, .box--blog > .box__footer > .box__footer-link:hover, .box--blog > .box__footer > .box__footer-link:focus, .box--blog > .box__footer > .box__footer-link:active {
  color: #1b1b1b;
}

.box--highlight > .box__title,
.box--highlight > .box__footer {
  background-color: #ffbe2e;
  border-color: #ffbe2e;
  color: #1b1b1b;
}
.box--highlight > .box__title > .box__title-link {
  color: #1b1b1b;
}
.box--highlight > .box__title > .box__title-link::after {
  background-image: url("../images/external-link--gray-7.svg") !important;
}
.box--highlight > .box__image,
.box--highlight > .box__image-link > .box__image {
  border-color: #ffbe2e;
}
.box--highlight > .box__content {
  border-color: #ffbe2e;
}
.box--highlight > .box__footer > .box__footer-link {
  color: #1b1b1b;
}
.box--highlight > .box__footer > .box__footer-link:visited, .box--highlight > .box__footer > .box__footer-link:hover, .box--highlight > .box__footer > .box__footer-link:focus, .box--highlight > .box__footer > .box__footer-link:active {
  color: #1b1b1b;
}

.box--news > .box__title,
.box--news > .box__footer {
  background-color: #1a4480;
  border-color: #1a4480;
  color: #fff;
}
.box--news > .box__title > .box__title-link {
  color: #fff;
}
.box--news > .box__title > .box__title-link::after {
  background-image: url("../images/external-link--white.svg") !important;
}
.box--news > .box__image,
.box--news > .box__image-link > .box__image {
  border-color: #1a4480;
}
.box--news > .box__content {
  border-color: #1a4480;
}

.box--related-info > .box__title,
.box--related-info > .box__footer {
  background-color: #4d8055;
  border-color: #4d8055;
  color: #fff;
}
.box--related-info > .box__title > .box__title-link {
  color: #fff;
}
.box--related-info > .box__title > .box__title-link::after {
  background-image: url("../images/external-link--white.svg") !important;
}
.box--related-info > .box__image,
.box--related-info > .box__image-link > .box__image {
  border-color: #4d8055;
}
.box--related-info > .box__content {
  border-color: #4d8055;
}

.box--report-violation {
  background-image: url("../images/report-a-violation.png");
  background-repeat: no-repeat;
  min-height: 4.75rem;
  padding-top: 5.75rem;
}
@media (min-width: 15em) {
  .box--report-violation {
    padding-left: 5.6875rem;
    padding-top: 0;
  }
}
@media (min-width: 40em) {
  .box--report-violation.u-align-left, .box--report-violation.u-align-right {
    width: 18.75rem;
  }
}
.box--report-violation > .box__title {
  font-weight: 700;
}
.box--report-violation > .box__content {
  font-size: 80%;
}

.box--rss > .box__title,
.box--rss > .box__footer {
  background-color: #005ea2;
  border-color: #005ea2;
  color: #fff;
}
.box--rss > .box__title > .box__title-link {
  color: #fff;
}
.box--rss > .box__title > .box__title-link::after {
  background-image: url("../images/external-link--white.svg") !important;
}
.box--rss > .box__image,
.box--rss > .box__image-link > .box__image {
  border-color: #005ea2;
}
.box--rss > .box__content {
  border-color: #005ea2;
}

body {
  border: 3px dotted #005ea2;
}

.box--special {
  background: #edeff0;
  padding: 0 1.25rem;
}
.box--special.has-image-header {
  max-width: 22.5rem;
}
.box--special > .box__title,
.box--special > .box__content,
.box--special > .box__footer {
  margin: 0;
  padding: 1.25rem 0;
}
.box--special > .box__image,
.box--special > .box__image-link {
  margin: 1.25rem 0;
}
.box--special > * + .box__image,
.box--special > * + .box__image-link,
.box--special > * + .box__content,
.box--special > * + .box__footer {
  margin-top: -0.25rem;
  padding-top: 0;
}
.box--special > .box__content > :last-child {
  margin-bottom: 0;
}
/*# sourceMappingURL=index.css.map */
